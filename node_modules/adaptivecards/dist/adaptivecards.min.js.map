{"version":3,"sources":["webpack:///adaptivecards.min.js","webpack:///webpack/bootstrap 083c7e7e2050de693a17","webpack:///./src/enums.ts","webpack:///./src/adaptivecards.ts","webpack:///./src/utils.ts","webpack:///./src/host-config.ts","webpack:///./src/card-elements.ts","webpack:///./src/text-formatters.ts","webpack:///./src/rendercard.ts"],"names":["AdaptiveCards","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","Size","TextSize","Spacing","Padding","TextWeight","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","BackgroundImageMode","ContainerStyle","ValidationError","__export","rendercard_1","renderCard","getValueOrDefault","obj","defaultValue","isNullOrEmpty","undefined","appendChild","node","child","getEnumValueOrDefault","targetEnum","key","parseInt","toLowerCase","parseHostConfigEnum","renderSeparation","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","Enums","Horizontal","style","marginTop","paddingTop","borderTop","stringToCssColor","lineColor","height","marginLeft","paddingLeft","borderLeft","width","overflow","color","regEx","matches","exec","a","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","length","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","push","currIdx","StringWithSubstitutions","this","_isProcessed","_original","_processed","substituteInputValues","inputs","matchedInput","id","replace","set","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Utils","SpacingDefinition","left","top","right","bottom","PaddingDefinition","None","toJSON","TextColorDefinition","normal","subtle","ContainerStyleDefinition","foregroundColors","default","accent","good","warning","attention","backgroundColor","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","FactTextDefinition","size","Default","isSubtle","weight","wrap","warp","FactTitleDefinition","_super","_this","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","Emphasis","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","ContainerStyleSet","emphasis","HostConfig","supportsInteractivity","fontFamily","small","medium","large","extraLarge","padding","fontSizes","fontWeights","lighter","bolder","imageSizes","containerStyles","actions","adaptiveCard","imageSet","factSet","String","JSON","parse","getEffectiveSpacing","Small","Large","ExtraLarge","getEffectivePadding","paddingToSpacingDefinition","getContainerStyleDefinition","containerStyle","invokeSetParent","parent","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createActionInstance","json","actionType","result","AdaptiveCard","actionTypeRegistry","createInstance","raiseParseError","error","UnknownActionType","message","raiseAnchorClickedEvent","anchor","card","getRootElement","onAnchorClickedHandler","onAnchorClicked","raiseExecuteActionEvent","onExecuteActionHandler","onExecuteAction","prepare","getAllInputs","raiseInlineCardExpandedEvent","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","raiseElementVisibilityChangedEvent","updateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","raiseParseElementEvent","onParseElementHandler","onParseElement","onParseError","TextFormatters","CardElement","_hostConfig","_internalPadding","_parent","_isVisibile","_renderedElement","_separatorElement","horizontalAlignment","internalRenderSeparator","hostConfig","separatorOrientation","updateRenderedElementVisibility","visibility","internalGetNonZeroPadding","internalPadding","adjustRenderedElementSize","renderedElement","flex","showBottomSpacer","requestingElement","hideBottomSpacer","setParent","allowCustomPadding","defaultPadding","getNonZeroPadding","getForbiddenElementTypes","getForbiddenActionTypes","speak","jsonSeparation","Deprecated","jsonHeight","validate","render","internalRender","boxSizing","processChildren","isAtTheVeryTop","isFirstElement","isAtTheVeryBottom","isLastElement","isAtTheVeryLeft","isLeftMostElement","isAtTheVeryRight","isRightMostElement","canContentBleed","rootElement","getParentContainer","currentElement","Container","getElementById","getActionById","defaultHostConfig","TextBlock","apply","arguments","text","Center","textAlign","Right","fontSize","_computedLineHeight","colorDefinition","parentContainer","styleDefinition","actualTextColor","Accent","Good","Warning","Attention","fontWeight","Lighter","toString","formattedText","formatText","processMarkdown","firstElementChild","HTMLElement","textOverflow","lastElementChild","marginBottom","anchors","getElementsByTagName","classList","add","target","onclick","e","preventDefault","wordWrap","maxLines","whiteSpace","useAdvancedTextBlockTruncation","_originalInnerHtml","sizeString","weightString","renderSpeech","truncateIfSupported","children","tagName","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","display","trElement","tdElement","verticalAlign","textBlock","jsonFacts","fact","speech","Image","Auto","pixelWidth","pixelHeight","altText","url","alignItems","selectAction","tabIndex","setAttribute","onkeypress","keyCode","execute","cancelBubble","justifyContent","imageElement","minWidth","Stretch","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","selectActionJson","_selectAction","ImageSet","_images","flexWrap","renderedImage","margin","marginRight","jsonImages","image","addImage","Error","Input","PropertyCantBeNull","TextInput","isMultiline","_textareaElement","className","placeholder","maxLength","_inputElement","type","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","label","labelElement","Choice","ChoiceSetInput","choices","isMultiSelect","defaultValues","split","_toggleInputs","checkboxInput","indexOf","compoundInput","isCompact","_selectElement","option","selected","disabled","hidden","radioInput","CollectionCantBeEmpty","concat","choiceArray","choice","NumberInput","_numberInputElement","min","max","DateInput","_dateInputElement","TimeInput","_timeInputElement","ActionButtonState","ActionButton","_element","_state","Normal","onClick","_action","click","updateCssStyle","ShowCardAction","Expanded","Subdued","_text","innerText","Action","_actionCollection","setCollection","actionCollection","setStatus","status","statusCard","InlineAdaptiveCard","showStatusCard","hideStatusCard","SubmitAction","_isPrepared","_originalData","_processedData","stringify","data","OpenUrlAction","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","headers","method","body","jsonHeaders","httpHeader","ActionCollection","owner","_actionButtons","_expandedAction","_renderedActionCount","_statusCard","_actionCard","items","onHideActionCardPane","onShowActionCardPane","_owner","refreshContainer","_actionCardContainer","paddingRight","hideActionCard","showActionCard","suppressStyle","renderedCard","actionClicked","actionButton","Popup","state","TooManyActions","InteractivityNotAllowed","ActionTypeNotAllowed","buttonStrip","flexDirection","ab","spacer","buttonStripContainer","addAction","clear","ActionSet","itemsCollectionPropertyName","jsonOrientation","jsonActions","BackgroundImage","mode","verticalAlignment","Top","backgroundImage","Repeat","RepeatHorizontally","RepeatVertically","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","_items","_style","bleed","verticalContentAlignment","isElementAllowed","forbiddenElementTypes","isInteractive","applyPadding","paddingBottom","hasBackground","physicalMargin","physicalPadding","effectivePadding","effectiveMargin","assign","separatorElement","renderedElementCount","hasExplicitStyle","defaultStyle","isVisible","jsonBackgroundImage","elementType","elementTypeRegistry","addItem","UnknownElementType","item","isStandalone","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","sizeAsNumber","isNaN","InvalidPropertyValue","ColumnSet","_columns","totalWeight","renderedColumnCount","computedWeight","renderedColumn","jsonColumns","column","addColumn","weightedColumns","stretchedColumns","Hint","Version","major","minor","_isValid","_major","_minor","versionString","_versionString","ContainerWithActions","renderedActions","TypeRegistry","reset","findTypeRegistration","typeName","registerType","registrationInfo","unregisterType","splice","ElementTypeRegistry","ActionTypeRegistry","version","isVersionSupported","bypassVersionCheck","currentVersion","_cardTypeName","MissingCardType","isValid","UnsupportedCardVersion","fallbackText","window","removeAttribute","formatters","DateFormatter","TimeFormatter","format","AbstractTextFormatter","regularExpression","_regularExpression","input","internalFormat","date","Date","toLocaleDateString","day","weekday","month","year","toLocaleTimeString","hour","minute","options","adaptivecards_1"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["var AdaptiveCards =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Size;\r\n(function (Size) {\r\n    Size[Size[\"Auto\"] = 0] = \"Auto\";\r\n    Size[Size[\"Stretch\"] = 1] = \"Stretch\";\r\n    Size[Size[\"Small\"] = 2] = \"Small\";\r\n    Size[Size[\"Medium\"] = 3] = \"Medium\";\r\n    Size[Size[\"Large\"] = 4] = \"Large\";\r\n})(Size = exports.Size || (exports.Size = {}));\r\nvar TextSize;\r\n(function (TextSize) {\r\n    TextSize[TextSize[\"Small\"] = 0] = \"Small\";\r\n    TextSize[TextSize[\"Default\"] = 1] = \"Default\";\r\n    TextSize[TextSize[\"Medium\"] = 2] = \"Medium\";\r\n    TextSize[TextSize[\"Large\"] = 3] = \"Large\";\r\n    TextSize[TextSize[\"ExtraLarge\"] = 4] = \"ExtraLarge\";\r\n})(TextSize = exports.TextSize || (exports.TextSize = {}));\r\nvar Spacing;\r\n(function (Spacing) {\r\n    Spacing[Spacing[\"None\"] = 0] = \"None\";\r\n    Spacing[Spacing[\"Small\"] = 1] = \"Small\";\r\n    Spacing[Spacing[\"Default\"] = 2] = \"Default\";\r\n    Spacing[Spacing[\"Medium\"] = 3] = \"Medium\";\r\n    Spacing[Spacing[\"Large\"] = 4] = \"Large\";\r\n    Spacing[Spacing[\"ExtraLarge\"] = 5] = \"ExtraLarge\";\r\n    Spacing[Spacing[\"Padding\"] = 6] = \"Padding\";\r\n})(Spacing = exports.Spacing || (exports.Spacing = {}));\r\nvar Padding;\r\n(function (Padding) {\r\n    Padding[Padding[\"None\"] = 0] = \"None\";\r\n    Padding[Padding[\"Default\"] = 1] = \"Default\";\r\n})(Padding = exports.Padding || (exports.Padding = {}));\r\nvar TextWeight;\r\n(function (TextWeight) {\r\n    TextWeight[TextWeight[\"Lighter\"] = 0] = \"Lighter\";\r\n    TextWeight[TextWeight[\"Default\"] = 1] = \"Default\";\r\n    TextWeight[TextWeight[\"Bolder\"] = 2] = \"Bolder\";\r\n})(TextWeight = exports.TextWeight || (exports.TextWeight = {}));\r\nvar TextColor;\r\n(function (TextColor) {\r\n    TextColor[TextColor[\"Default\"] = 0] = \"Default\";\r\n    TextColor[TextColor[\"Accent\"] = 1] = \"Accent\";\r\n    TextColor[TextColor[\"Good\"] = 2] = \"Good\";\r\n    TextColor[TextColor[\"Warning\"] = 3] = \"Warning\";\r\n    TextColor[TextColor[\"Attention\"] = 4] = \"Attention\";\r\n})(TextColor = exports.TextColor || (exports.TextColor = {}));\r\nvar HorizontalAlignment;\r\n(function (HorizontalAlignment) {\r\n    HorizontalAlignment[HorizontalAlignment[\"Left\"] = 0] = \"Left\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Center\"] = 1] = \"Center\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Right\"] = 2] = \"Right\";\r\n})(HorizontalAlignment = exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));\r\nvar VerticalAlignment;\r\n(function (VerticalAlignment) {\r\n    VerticalAlignment[VerticalAlignment[\"Top\"] = 0] = \"Top\";\r\n    VerticalAlignment[VerticalAlignment[\"Center\"] = 1] = \"Center\";\r\n    VerticalAlignment[VerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\r\n})(VerticalAlignment = exports.VerticalAlignment || (exports.VerticalAlignment = {}));\r\nvar ActionAlignment;\r\n(function (ActionAlignment) {\r\n    ActionAlignment[ActionAlignment[\"Left\"] = 0] = \"Left\";\r\n    ActionAlignment[ActionAlignment[\"Center\"] = 1] = \"Center\";\r\n    ActionAlignment[ActionAlignment[\"Right\"] = 2] = \"Right\";\r\n    ActionAlignment[ActionAlignment[\"Stretch\"] = 3] = \"Stretch\";\r\n})(ActionAlignment = exports.ActionAlignment || (exports.ActionAlignment = {}));\r\nvar ImageStyle;\r\n(function (ImageStyle) {\r\n    ImageStyle[ImageStyle[\"Default\"] = 0] = \"Default\";\r\n    ImageStyle[ImageStyle[\"Person\"] = 1] = \"Person\";\r\n})(ImageStyle = exports.ImageStyle || (exports.ImageStyle = {}));\r\nvar ShowCardActionMode;\r\n(function (ShowCardActionMode) {\r\n    ShowCardActionMode[ShowCardActionMode[\"Inline\"] = 0] = \"Inline\";\r\n    ShowCardActionMode[ShowCardActionMode[\"Popup\"] = 1] = \"Popup\";\r\n})(ShowCardActionMode = exports.ShowCardActionMode || (exports.ShowCardActionMode = {}));\r\nvar Orientation;\r\n(function (Orientation) {\r\n    Orientation[Orientation[\"Horizontal\"] = 0] = \"Horizontal\";\r\n    Orientation[Orientation[\"Vertical\"] = 1] = \"Vertical\";\r\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\r\nvar BackgroundImageMode;\r\n(function (BackgroundImageMode) {\r\n    BackgroundImageMode[BackgroundImageMode[\"Stretch\"] = 0] = \"Stretch\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatHorizontally\"] = 1] = \"RepeatHorizontally\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatVertically\"] = 2] = \"RepeatVertically\";\r\n    BackgroundImageMode[BackgroundImageMode[\"Repeat\"] = 3] = \"Repeat\";\r\n})(BackgroundImageMode = exports.BackgroundImageMode || (exports.BackgroundImageMode = {}));\r\nvar ContainerStyle;\r\n(function (ContainerStyle) {\r\n    ContainerStyle[ContainerStyle[\"Default\"] = 0] = \"Default\";\r\n    ContainerStyle[ContainerStyle[\"Emphasis\"] = 1] = \"Emphasis\";\r\n})(ContainerStyle = exports.ContainerStyle || (exports.ContainerStyle = {}));\r\nvar ValidationError;\r\n(function (ValidationError) {\r\n    ValidationError[ValidationError[\"Hint\"] = 0] = \"Hint\";\r\n    ValidationError[ValidationError[\"ActionTypeNotAllowed\"] = 1] = \"ActionTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"CollectionCantBeEmpty\"] = 2] = \"CollectionCantBeEmpty\";\r\n    ValidationError[ValidationError[\"Deprecated\"] = 3] = \"Deprecated\";\r\n    ValidationError[ValidationError[\"ElementTypeNotAllowed\"] = 4] = \"ElementTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"InteractivityNotAllowed\"] = 5] = \"InteractivityNotAllowed\";\r\n    ValidationError[ValidationError[\"InvalidPropertyValue\"] = 6] = \"InvalidPropertyValue\";\r\n    ValidationError[ValidationError[\"MissingCardType\"] = 7] = \"MissingCardType\";\r\n    ValidationError[ValidationError[\"PropertyCantBeNull\"] = 8] = \"PropertyCantBeNull\";\r\n    ValidationError[ValidationError[\"TooManyActions\"] = 9] = \"TooManyActions\";\r\n    ValidationError[ValidationError[\"UnknownActionType\"] = 10] = \"UnknownActionType\";\r\n    ValidationError[ValidationError[\"UnknownElementType\"] = 11] = \"UnknownElementType\";\r\n    ValidationError[ValidationError[\"UnsupportedCardVersion\"] = 12] = \"UnsupportedCardVersion\";\r\n})(ValidationError = exports.ValidationError || (exports.ValidationError = {}));\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(0));\r\n__export(__webpack_require__(3));\r\nvar rendercard_1 = __webpack_require__(7);\r\nexports.renderCard = rendercard_1.renderCard;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nfunction getValueOrDefault(obj, defaultValue) {\r\n    return obj ? obj : defaultValue;\r\n}\r\nexports.getValueOrDefault = getValueOrDefault;\r\nfunction isNullOrEmpty(value) {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\nexports.isNullOrEmpty = isNullOrEmpty;\r\nfunction appendChild(node, child) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\nexports.appendChild = appendChild;\r\nfunction getEnumValueOrDefault(targetEnum, name, defaultValue) {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n    for (var key in targetEnum) {\r\n        var isValueProperty = parseInt(key, 10) >= 0;\r\n        if (isValueProperty) {\r\n            var value = targetEnum[key];\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\nexports.getEnumValueOrDefault = getEnumValueOrDefault;\r\nfunction parseHostConfigEnum(targetEnum, value, defaultValue) {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return getValueOrDefault(value, defaultValue);\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\nexports.parseHostConfigEnum = parseHostConfigEnum;\r\nfunction renderSeparation(separationDefinition, orientation) {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        separator.style.overflow = \"hidden\";\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexports.renderSeparation = renderSeparation;\r\nfunction stringToCssColor(color) {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n    var matches = regEx.exec(color);\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\nexports.stringToCssColor = stringToCssColor;\r\nvar StringWithSubstitutions = /** @class */ (function () {\r\n    function StringWithSubstitutions() {\r\n        this._isProcessed = false;\r\n        this._original = null;\r\n        this._processed = null;\r\n    }\r\n    StringWithSubstitutions.prototype.substituteInputValues = function (inputs) {\r\n        this._processed = this._original;\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput = null;\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (matchedInput) {\r\n                this._processed = this._processed.replace(matches[0], matchedInput.value ? matchedInput.value : \"\");\r\n            }\r\n        }\r\n        ;\r\n        this._isProcessed = true;\r\n    };\r\n    StringWithSubstitutions.prototype.get = function () {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    };\r\n    StringWithSubstitutions.prototype.set = function (value) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    };\r\n    return StringWithSubstitutions;\r\n}());\r\nexports.StringWithSubstitutions = StringWithSubstitutions;\r\nfunction truncate(element, maxHeight, lineHeight) {\r\n    var fits = function () {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n    if (fits())\r\n        return;\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = function (idx) {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    };\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n    truncateAt(bestBreakIdx);\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        var idx = findNextCharacter(fullText, bestBreakIdx);\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\nexports.truncate = truncate;\r\nfunction findBreakableIndices(html) {\r\n    var results = [];\r\n    var idx = findNextCharacter(html, -1);\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n    return results;\r\n}\r\nfunction findNextCharacter(html, currIdx) {\r\n    currIdx += 1;\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>')\r\n            ;\r\n    }\r\n    return currIdx;\r\n}\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(2);\r\nvar SpacingDefinition = /** @class */ (function () {\r\n    function SpacingDefinition(obj) {\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.right = 0;\r\n        this.bottom = 0;\r\n        if (obj) {\r\n            this.top = obj[\"top\"] || this.top;\r\n            this.right = obj[\"right\"] || this.right;\r\n            this.bottom = obj[\"bottom\"] || this.bottom;\r\n            this.left = obj[\"left\"] || this.left;\r\n        }\r\n    }\r\n    return SpacingDefinition;\r\n}());\r\nexports.SpacingDefinition = SpacingDefinition;\r\nvar PaddingDefinition = /** @class */ (function () {\r\n    function PaddingDefinition(obj) {\r\n        this.top = Enums.Padding.None;\r\n        this.right = Enums.Padding.None;\r\n        this.bottom = Enums.Padding.None;\r\n        this.left = Enums.Padding.None;\r\n        if (obj) {\r\n            this.top = Utils.parseHostConfigEnum(Enums.Padding, obj[\"top\"], Enums.Padding.None);\r\n            this.right = Utils.parseHostConfigEnum(Enums.Padding, obj[\"right\"], Enums.Padding.None);\r\n            this.bottom = Utils.parseHostConfigEnum(Enums.Padding, obj[\"bottom\"], Enums.Padding.None);\r\n            this.left = Utils.parseHostConfigEnum(Enums.Padding, obj[\"left\"], Enums.Padding.None);\r\n        }\r\n    }\r\n    PaddingDefinition.prototype.toJSON = function () {\r\n        return {\r\n            top: Enums.Padding[this.top],\r\n            right: Enums.Padding[this.right],\r\n            bottom: Enums.Padding[this.bottom],\r\n            left: Enums.Padding[this.left],\r\n        };\r\n    };\r\n    return PaddingDefinition;\r\n}());\r\nexports.PaddingDefinition = PaddingDefinition;\r\nvar TextColorDefinition = /** @class */ (function () {\r\n    function TextColorDefinition(obj) {\r\n        this.normal = \"#000000\";\r\n        this.subtle = \"#222222\";\r\n        if (obj) {\r\n            this.normal = obj[\"normal\"] || this.normal;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n    return TextColorDefinition;\r\n}());\r\nexports.TextColorDefinition = TextColorDefinition;\r\nvar ContainerStyleDefinition = /** @class */ (function () {\r\n    function ContainerStyleDefinition(obj) {\r\n        this.foregroundColors = {\r\n            default: new TextColorDefinition(),\r\n            accent: new TextColorDefinition(),\r\n            good: new TextColorDefinition(),\r\n            warning: new TextColorDefinition(),\r\n            attention: new TextColorDefinition()\r\n        };\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n            this.foregroundColors = {\r\n                default: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"default\"]),\r\n                accent: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"accent\"]),\r\n                good: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"good\"]),\r\n                warning: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"warning\"]),\r\n                attention: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"attention\"])\r\n            };\r\n        }\r\n    }\r\n    return ContainerStyleDefinition;\r\n}());\r\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\r\nvar AdaptiveCardConfig = /** @class */ (function () {\r\n    function AdaptiveCardConfig(obj) {\r\n        this.allowCustomStyle = false;\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n    return AdaptiveCardConfig;\r\n}());\r\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\r\nvar ImageSetConfig = /** @class */ (function () {\r\n    function ImageSetConfig(obj) {\r\n        this.imageSize = Enums.Size.Medium;\r\n        this.maxImageHeight = 100;\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault(\"maxImageHeight\", 100);\r\n        }\r\n    }\r\n    ImageSetConfig.prototype.toJSON = function () {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        };\r\n    };\r\n    return ImageSetConfig;\r\n}());\r\nexports.ImageSetConfig = ImageSetConfig;\r\nvar FactTextDefinition = /** @class */ (function () {\r\n    function FactTextDefinition(obj) {\r\n        this.size = Enums.TextSize.Default;\r\n        this.color = Enums.TextColor.Default;\r\n        this.isSubtle = false;\r\n        this.weight = Enums.TextWeight.Default;\r\n        this.wrap = true;\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Default);\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n    ;\r\n    FactTextDefinition.prototype.toJSON = function () {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            warp: this.wrap\r\n        };\r\n    };\r\n    return FactTextDefinition;\r\n}());\r\nexports.FactTextDefinition = FactTextDefinition;\r\nvar FactTitleDefinition = /** @class */ (function (_super) {\r\n    __extends(FactTitleDefinition, _super);\r\n    function FactTitleDefinition(obj) {\r\n        var _this = _super.call(this, obj) || this;\r\n        _this.maxWidth = 150;\r\n        _this.weight = Enums.TextWeight.Bolder;\r\n        if (obj) {\r\n            _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\r\n        }\r\n        return _this;\r\n    }\r\n    return FactTitleDefinition;\r\n}(FactTextDefinition));\r\nexports.FactTitleDefinition = FactTitleDefinition;\r\nvar FactSetConfig = /** @class */ (function () {\r\n    function FactSetConfig(obj) {\r\n        this.title = new FactTitleDefinition();\r\n        this.value = new FactTextDefinition();\r\n        this.spacing = 10;\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n    return FactSetConfig;\r\n}());\r\nexports.FactSetConfig = FactSetConfig;\r\nvar ShowCardActionConfig = /** @class */ (function () {\r\n    function ShowCardActionConfig(obj) {\r\n        this.actionMode = Enums.ShowCardActionMode.Inline;\r\n        this.inlineTopMargin = 16;\r\n        this.style = Enums.ContainerStyle.Emphasis;\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = Utils.parseHostConfigEnum(Enums.ContainerStyle, obj[\"style\"], Enums.ContainerStyle.Emphasis);\r\n        }\r\n    }\r\n    ShowCardActionConfig.prototype.toJSON = function () {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: Enums.ContainerStyle[this.style]\r\n        };\r\n    };\r\n    return ShowCardActionConfig;\r\n}());\r\nexports.ShowCardActionConfig = ShowCardActionConfig;\r\nvar ActionsConfig = /** @class */ (function () {\r\n    function ActionsConfig(obj) {\r\n        this.maxActions = 5;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.buttonSpacing = 20;\r\n        this.showCard = new ShowCardActionConfig();\r\n        this.preExpandSingleShowCardAction = false;\r\n        this.actionsOrientation = Enums.Orientation.Horizontal;\r\n        this.actionAlignment = Enums.ActionAlignment.Left;\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n        }\r\n    }\r\n    ActionsConfig.prototype.toJSON = function () {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        };\r\n    };\r\n    return ActionsConfig;\r\n}());\r\nexports.ActionsConfig = ActionsConfig;\r\nvar ContainerStyleSet = /** @class */ (function () {\r\n    function ContainerStyleSet(obj) {\r\n        this.default = new ContainerStyleDefinition();\r\n        this.emphasis = new ContainerStyleDefinition();\r\n        this.emphasis.backgroundColor = \"#EEEEEE\";\r\n        if (obj) {\r\n            this.default = new ContainerStyleDefinition(obj[\"default\"]);\r\n            this.emphasis = new ContainerStyleDefinition(obj[\"emphasis\"]);\r\n        }\r\n    }\r\n    return ContainerStyleSet;\r\n}());\r\nexports.ContainerStyleSet = ContainerStyleSet;\r\nvar HostConfig = /** @class */ (function () {\r\n    function HostConfig(obj) {\r\n        this.supportsInteractivity = true;\r\n        this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n        this.spacing = {\r\n            small: 3,\r\n            default: 8,\r\n            medium: 20,\r\n            large: 30,\r\n            extraLarge: 40,\r\n            padding: 15\r\n        };\r\n        this.separator = {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        };\r\n        this.fontSizes = {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        };\r\n        this.fontWeights = {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        };\r\n        this.imageSizes = {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        };\r\n        this.containerStyles = new ContainerStyleSet();\r\n        this.actions = new ActionsConfig();\r\n        this.adaptiveCard = new AdaptiveCardConfig();\r\n        this.imageSet = new ImageSetConfig();\r\n        this.factSet = new FactSetConfig();\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            };\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"]);\r\n        }\r\n    }\r\n    HostConfig.prototype.getEffectiveSpacing = function (spacing) {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    HostConfig.prototype.getEffectivePadding = function (padding) {\r\n        switch (padding) {\r\n            case Enums.Padding.Default:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    HostConfig.prototype.paddingToSpacingDefinition = function (padding) {\r\n        return new SpacingDefinition({\r\n            top: this.getEffectivePadding(padding.top),\r\n            right: this.getEffectivePadding(padding.right),\r\n            bottom: this.getEffectivePadding(padding.bottom),\r\n            left: this.getEffectivePadding(padding.left)\r\n        });\r\n    };\r\n    HostConfig.prototype.getContainerStyleDefinition = function (containerStyle) {\r\n        switch (containerStyle) {\r\n            case Enums.ContainerStyle.Emphasis:\r\n                return this.containerStyles.emphasis;\r\n            default:\r\n                return this.containerStyles.default;\r\n        }\r\n    };\r\n    return HostConfig;\r\n}());\r\nexports.HostConfig = HostConfig;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(2);\r\nvar HostConfig = __webpack_require__(3);\r\nvar TextFormatters = __webpack_require__(6);\r\nfunction invokeSetParent(obj, parent) {\r\n    if (obj) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        obj[\"setParent\"](parent);\r\n    }\r\n}\r\nfunction invokeSetCollection(action, collection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\nfunction isActionAllowed(action, forbiddenActionTypes) {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction createActionInstance(json) {\r\n    var actionType = json[\"type\"];\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n    if (result) {\r\n        result.parse(json);\r\n    }\r\n    else {\r\n        raiseParseError({\r\n            error: Enums.ValidationError.UnknownActionType,\r\n            message: \"Unknown action type: \" + actionType\r\n        });\r\n    }\r\n    return result;\r\n}\r\nvar CardElement = /** @class */ (function () {\r\n    function CardElement() {\r\n        this._hostConfig = null;\r\n        this._internalPadding = null;\r\n        this._parent = null;\r\n        this._isVisibile = true;\r\n        this._renderedElement = null;\r\n        this._separatorElement = null;\r\n        this.horizontalAlignment = null;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.separator = false;\r\n        this.height = \"auto\";\r\n    }\r\n    CardElement.prototype.internalRenderSeparator = function () {\r\n        return Utils.renderSeparation({\r\n            spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n            lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n            lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n        }, this.separatorOrientation);\r\n    };\r\n    CardElement.prototype.updateRenderedElementVisibility = function () {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.visibility = this._isVisibile ? null : \"collapse\";\r\n        }\r\n        if (this._separatorElement) {\r\n            this._separatorElement.style.visibility = this._isVisibile ? null : \"collapse\";\r\n        }\r\n    };\r\n    CardElement.prototype.internalGetNonZeroPadding = function (padding) {\r\n        if (padding.top == Enums.Padding.None) {\r\n            padding.top = this.internalPadding.top;\r\n        }\r\n        if (padding.right == Enums.Padding.None) {\r\n            padding.right = this.internalPadding.right;\r\n        }\r\n        if (padding.bottom == Enums.Padding.None) {\r\n            padding.bottom = this.internalPadding.bottom;\r\n        }\r\n        if (padding.left == Enums.Padding.None) {\r\n            padding.left = this.internalPadding.left;\r\n        }\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(padding);\r\n        }\r\n    };\r\n    CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 100%\";\r\n        }\r\n    };\r\n    CardElement.prototype.showBottomSpacer = function (requestingElement) {\r\n        if (this.parent) {\r\n            this.parent.showBottomSpacer(requestingElement);\r\n        }\r\n    };\r\n    CardElement.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if (this.parent) {\r\n            this.parent.hideBottomSpacer(requestingElement);\r\n        }\r\n    };\r\n    CardElement.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new HostConfig.PaddingDefinition({\r\n                top: Enums.Padding.None,\r\n                right: Enums.Padding.None,\r\n                bottom: Enums.Padding.None,\r\n                left: Enums.Padding.None\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"internalPadding\", {\r\n        get: function () {\r\n            return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n        },\r\n        set: function (value) {\r\n            this._internalPadding = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Horizontal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CardElement.prototype.getNonZeroPadding = function () {\r\n        var padding = new HostConfig.PaddingDefinition({\r\n            top: Enums.Padding.None,\r\n            right: Enums.Padding.None,\r\n            bottom: Enums.Padding.None,\r\n            left: Enums.Padding.None\r\n        });\r\n        this.internalGetNonZeroPadding(padding);\r\n        return padding;\r\n    };\r\n    CardElement.prototype.getForbiddenElementTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.getForbiddenActionTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.parse = function (json) {\r\n        raiseParseElementEvent(this, json);\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n        var jsonSeparation = json[\"separation\"];\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n            });\r\n        }\r\n        var jsonHeight = json[\"height\"];\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    };\r\n    CardElement.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.render = function () {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n            this.updateRenderedElementVisibility();\r\n        }\r\n        return this._renderedElement;\r\n    };\r\n    CardElement.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        // Does nothing in base implementation\r\n    };\r\n    CardElement.prototype.isAtTheVeryTop = function () {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    };\r\n    CardElement.prototype.isFirstElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryBottom = function () {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    };\r\n    CardElement.prototype.isLastElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryLeft = function () {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    };\r\n    CardElement.prototype.isLeftMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryRight = function () {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    };\r\n    CardElement.prototype.isRightMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.canContentBleed = function () {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    };\r\n    CardElement.prototype.getRootElement = function () {\r\n        var rootElement = this;\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n        return rootElement;\r\n    };\r\n    CardElement.prototype.getParentContainer = function () {\r\n        var currentElement = this.parent;\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return currentElement;\r\n            }\r\n            currentElement = currentElement.parent;\r\n        }\r\n        return null;\r\n    };\r\n    CardElement.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getElementById = function (id) {\r\n        return this.id === id ? this : null;\r\n    };\r\n    CardElement.prototype.getActionById = function (id) {\r\n        return null;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"hostConfig\", {\r\n        get: function () {\r\n            if (this._hostConfig) {\r\n                return this._hostConfig;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.hostConfig;\r\n                }\r\n                else {\r\n                    return defaultHostConfig;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._hostConfig = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isVisible\", {\r\n        get: function () {\r\n            return this._isVisibile;\r\n        },\r\n        set: function (value) {\r\n            if (this._isVisibile != value) {\r\n                this._isVisibile = value;\r\n                this.updateRenderedElementVisibility();\r\n                if (this._renderedElement) {\r\n                    raiseElementVisibilityChangedEvent(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorElement\", {\r\n        get: function () {\r\n            return this._separatorElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CardElement;\r\n}());\r\nexports.CardElement = CardElement;\r\nvar TextBlock = /** @class */ (function (_super) {\r\n    __extends(TextBlock, _super);\r\n    function TextBlock() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.size = Enums.TextSize.Default;\r\n        _this.weight = Enums.TextWeight.Default;\r\n        _this.color = Enums.TextColor.Default;\r\n        _this.isSubtle = false;\r\n        _this.wrap = false;\r\n        return _this;\r\n    }\r\n    TextBlock.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var element = document.createElement(\"div\");\r\n            element.style.overflow = \"hidden\";\r\n            if (this.hostConfig.fontFamily) {\r\n                element.style.fontFamily = this.hostConfig.fontFamily;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = \"left\";\r\n                    break;\r\n            }\r\n            var cssStyle = \"text \";\r\n            var fontSize;\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    fontSize = this.hostConfig.fontSizes.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    fontSize = this.hostConfig.fontSizes.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    fontSize = this.hostConfig.fontSizes.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                    break;\r\n                default:\r\n                    fontSize = this.hostConfig.fontSizes.default;\r\n                    break;\r\n            }\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n            element.style.fontSize = fontSize + \"px\";\r\n            element.style.lineHeight = this._computedLineHeight + \"px\";\r\n            var parentContainer = this.getParentContainer();\r\n            var styleDefinition = this.hostConfig.getContainerStyleDefinition(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default);\r\n            var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n            var colorDefinition;\r\n            switch (actualTextColor) {\r\n                case Enums.TextColor.Accent:\r\n                    colorDefinition = styleDefinition.foregroundColors.accent;\r\n                    break;\r\n                case Enums.TextColor.Good:\r\n                    colorDefinition = styleDefinition.foregroundColors.good;\r\n                    break;\r\n                case Enums.TextColor.Warning:\r\n                    colorDefinition = styleDefinition.foregroundColors.warning;\r\n                    break;\r\n                case Enums.TextColor.Attention:\r\n                    colorDefinition = styleDefinition.foregroundColors.attention;\r\n                    break;\r\n                default:\r\n                    colorDefinition = styleDefinition.foregroundColors.default;\r\n                    break;\r\n            }\r\n            element.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.normal);\r\n            var fontWeight;\r\n            switch (this.weight) {\r\n                case Enums.TextWeight.Lighter:\r\n                    fontWeight = this.hostConfig.fontWeights.lighter;\r\n                    break;\r\n                case Enums.TextWeight.Bolder:\r\n                    fontWeight = this.hostConfig.fontWeights.bolder;\r\n                    break;\r\n                default:\r\n                    fontWeight = this.hostConfig.fontWeights.default;\r\n                    break;\r\n            }\r\n            element.style.fontWeight = fontWeight.toString();\r\n            var formattedText = TextFormatters.formatText(this.text);\r\n            element.innerHTML = AdaptiveCard.processMarkdown(formattedText);\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                element.lastElementChild.style.marginBottom = \"0px\";\r\n            }\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = anchors[i];\r\n                anchor.classList.add(\"ac-anchor\");\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = function (e) {\r\n                    if (raiseAnchorClickedEvent(_this, anchor)) {\r\n                        e.preventDefault();\r\n                    }\r\n                };\r\n            }\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n            }\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TextBlock.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.text = json[\"text\"];\r\n        var sizeString = json[\"size\"];\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n        var weightString = json[\"weight\"];\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        this.maxLines = json[\"maxLines\"];\r\n    };\r\n    TextBlock.prototype.getJsonTypeName = function () {\r\n        return \"TextBlock\";\r\n    };\r\n    TextBlock.prototype.renderSpeech = function () {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n        return null;\r\n    };\r\n    TextBlock.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = false; }\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.renderedElement.innerHTML = this._originalInnerHtml;\r\n            this.truncateIfSupported();\r\n        }\r\n    };\r\n    TextBlock.prototype.truncateIfSupported = function () {\r\n        if (this.maxLines && this.renderedElement.scrollHeight) {\r\n            // For now, only truncate TextBlocks that contain just a single\r\n            // paragraph -- since the maxLines calculation doesn't take into\r\n            // account Markdown lists\r\n            var children = this.renderedElement.children;\r\n            var truncationSupported = children.length == 1\r\n                && children[0].tagName.toLowerCase() == 'p';\r\n            if (truncationSupported) {\r\n                var element = children[0];\r\n                var maxHeight = this._computedLineHeight * this.maxLines;\r\n                Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            }\r\n        }\r\n    };\r\n    return TextBlock;\r\n}(CardElement));\r\nexports.TextBlock = TextBlock;\r\nvar Fact = /** @class */ (function () {\r\n    function Fact() {\r\n    }\r\n    Fact.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    };\r\n    return Fact;\r\n}());\r\nexports.Fact = Fact;\r\nvar FactSet = /** @class */ (function (_super) {\r\n    __extends(FactSet, _super);\r\n    function FactSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.facts = [];\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FactSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n                tdElement.style.verticalAlign = \"top\";\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    FactSet.prototype.getJsonTypeName = function () {\r\n        return \"FactSet\";\r\n    };\r\n    FactSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"];\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                var fact = new Fact();\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    };\r\n    FactSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        // render each fact\r\n        var speak = null;\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var speech = this.facts[i].renderSpeech();\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    };\r\n    return FactSet;\r\n}(CardElement));\r\nexports.FactSet = FactSet;\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.ImageStyle.Default;\r\n        _this.size = Enums.Size.Auto;\r\n        _this.pixelWidth = null;\r\n        _this.pixelHeight = null;\r\n        _this.altText = \"\";\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Image.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = null;\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.classList.add(\"ac-image\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n            if (this.selectAction != null && this.hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0;\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(\"ac-selectable\");\r\n            }\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            if (this.pixelWidth || this.pixelHeight) {\r\n                if (this.pixelWidth) {\r\n                    imageElement.style.width = this.pixelWidth + \"px\";\r\n                }\r\n                if (this.pixelHeight) {\r\n                    imageElement.style.height = this.pixelHeight + \"px\";\r\n                }\r\n            }\r\n            else {\r\n                switch (this.size) {\r\n                    case Enums.Size.Stretch:\r\n                        imageElement.style.width = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Auto:\r\n                        imageElement.style.maxWidth = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Small:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    case Enums.Size.Medium:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n            }\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n            element.appendChild(imageElement);\r\n        }\r\n        return element;\r\n    };\r\n    Image.prototype.getJsonTypeName = function () {\r\n        return \"Image\";\r\n    };\r\n    Image.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    Image.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n        var styleString = json[\"style\"];\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            });\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n        }\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n        }\r\n    };\r\n    Image.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Object.defineProperty(Image.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                invokeSetParent(this._selectAction, this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(CardElement));\r\nexports.Image = Image;\r\nvar ImageSet = /** @class */ (function (_super) {\r\n    __extends(ImageSet, _super);\r\n    function ImageSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._images = [];\r\n        _this.imageSize = Enums.Size.Medium;\r\n        return _this;\r\n    }\r\n    ImageSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                var renderedImage = this._images[i].render();\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    ImageSet.prototype.getJsonTypeName = function () {\r\n        return \"ImageSet\";\r\n    };\r\n    ImageSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        //this.imageSize = Utils.getValueOrDefault<Enums.Size>(json[\"imageSize\"], Enums.Size.medium);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n        if (json[\"images\"] != null) {\r\n            var jsonImages = json[\"images\"];\r\n            this._images = [];\r\n            for (var i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i]);\r\n                image.size = this.imageSize;\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    };\r\n    ImageSet.prototype.addImage = function (image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n            invokeSetParent(image, this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    };\r\n    ImageSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        var speak = null;\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    return ImageSet;\r\n}(CardElement));\r\nexports.ImageSet = ImageSet;\r\nvar Input = /** @class */ (function (_super) {\r\n    __extends(Input, _super);\r\n    function Input() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Input.prototype.validate = function () {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Input.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    };\r\n    Input.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Input.prototype.getAllInputs = function () {\r\n        return [this];\r\n    };\r\n    Object.defineProperty(Input.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Input;\r\n}(CardElement));\r\nexports.Input = Input;\r\nvar TextInput = /** @class */ (function (_super) {\r\n    __extends(TextInput, _super);\r\n    function TextInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextInput.prototype.internalRender = function () {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = \"ac-input ac-textInput ac-multiline\";\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = \"text\";\r\n            this._inputElement.className = \"ac-input ac-textInput\";\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n            return this._inputElement;\r\n        }\r\n    };\r\n    TextInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Text\";\r\n    };\r\n    TextInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n    };\r\n    Object.defineProperty(TextInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.isMultiline) {\r\n                return this._textareaElement ? this._textareaElement.value : null;\r\n            }\r\n            else {\r\n                return this._inputElement ? this._inputElement.value : null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextInput;\r\n}(Input));\r\nexports.TextInput = TextInput;\r\nvar ToggleInput = /** @class */ (function (_super) {\r\n    __extends(ToggleInput, _super);\r\n    function ToggleInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.valueOn = \"true\";\r\n        _this.valueOff = \"false\";\r\n        return _this;\r\n    }\r\n    ToggleInput.prototype.internalRender = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-input\";\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n        var label = new TextBlock();\r\n        label.hostConfig = this.hostConfig;\r\n        label.text = this.title;\r\n        var labelElement = label.render();\r\n        labelElement.style.display = \"inline-block\";\r\n        labelElement.style.marginLeft = \"6px\";\r\n        labelElement.style.verticalAlign = \"middle\";\r\n        var compoundInput = document.createElement(\"div\");\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        Utils.appendChild(element, labelElement);\r\n        return element;\r\n    };\r\n    ToggleInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Toggle\";\r\n    };\r\n    ToggleInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.title = json[\"title\"];\r\n        this.valueOn = Utils.getValueOrDefault(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault(json[\"valueOff\"], this.valueOff);\r\n    };\r\n    Object.defineProperty(ToggleInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this._checkboxInputElement) {\r\n                return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ToggleInput;\r\n}(Input));\r\nexports.ToggleInput = ToggleInput;\r\nvar Choice = /** @class */ (function () {\r\n    function Choice() {\r\n    }\r\n    return Choice;\r\n}());\r\nexports.Choice = Choice;\r\nvar ChoiceSetInput = /** @class */ (function (_super) {\r\n    __extends(ChoiceSetInput, _super);\r\n    function ChoiceSetInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.choices = [];\r\n        return _this;\r\n    }\r\n    ChoiceSetInput.prototype.internalRender = function () {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = \"ac-input ac-multichoiceInput\";\r\n                this._selectElement.style.width = \"100%\";\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n                Utils.appendChild(this._selectElement, option);\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var element = document.createElement(\"div\");\r\n                element.className = \"ac-input\";\r\n                element.style.width = \"100%\";\r\n                this._toggleInputs = [];\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n                    this._toggleInputs.push(radioInput);\r\n                    var label = new TextBlock();\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = this.choices[i].title;\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(\",\") : null;\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-input\";\r\n            element.style.width = \"100%\";\r\n            this._toggleInputs = [];\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n                this._toggleInputs.push(checkboxInput);\r\n                var label = new TextBlock();\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = this.choices[i].title;\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n            return element;\r\n        }\r\n    };\r\n    ChoiceSetInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.ChoiceSet\";\r\n    };\r\n    ChoiceSetInput.prototype.validate = function () {\r\n        var result = [];\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }]);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"];\r\n            this.choices = [];\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (!this.isMultiSelect) {\r\n                if (this.isCompact) {\r\n                    return this._selectElement ? this._selectElement.value : null;\r\n                }\r\n                else {\r\n                    if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                        return null;\r\n                    }\r\n                    for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                        if (this._toggleInputs[i].checked) {\r\n                            return this._toggleInputs[i].value;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n                var result = \"\";\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        if (result != \"\") {\r\n                            result += \";\";\r\n                        }\r\n                        result += this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n                return result == \"\" ? null : result;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ChoiceSetInput;\r\n}(Input));\r\nexports.ChoiceSetInput = ChoiceSetInput;\r\nvar NumberInput = /** @class */ (function (_super) {\r\n    __extends(NumberInput, _super);\r\n    function NumberInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumberInput.prototype.internalRender = function () {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.type = \"number\";\r\n        this._numberInputElement.className = \"ac-input ac-numberInput\";\r\n        this._numberInputElement.min = this.min;\r\n        this._numberInputElement.max = this.max;\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n        return this._numberInputElement;\r\n    };\r\n    NumberInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Number\";\r\n    };\r\n    NumberInput.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    };\r\n    Object.defineProperty(NumberInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._numberInputElement ? this._numberInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NumberInput;\r\n}(Input));\r\nexports.NumberInput = NumberInput;\r\nvar DateInput = /** @class */ (function (_super) {\r\n    __extends(DateInput, _super);\r\n    function DateInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateInput.prototype.internalRender = function () {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.type = \"date\";\r\n        this._dateInputElement.className = \"ac-input ac-dateInput\";\r\n        this._dateInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n        return this._dateInputElement;\r\n    };\r\n    DateInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Date\";\r\n    };\r\n    Object.defineProperty(DateInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._dateInputElement ? this._dateInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateInput;\r\n}(Input));\r\nexports.DateInput = DateInput;\r\nvar TimeInput = /** @class */ (function (_super) {\r\n    __extends(TimeInput, _super);\r\n    function TimeInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeInput.prototype.internalRender = function () {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.type = \"time\";\r\n        this._timeInputElement.className = \"ac-input ac-timeInput\";\r\n        this._timeInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n        return this._timeInputElement;\r\n    };\r\n    TimeInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Time\";\r\n    };\r\n    Object.defineProperty(TimeInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._timeInputElement ? this._timeInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TimeInput;\r\n}(Input));\r\nexports.TimeInput = TimeInput;\r\nvar ActionButtonState;\r\n(function (ActionButtonState) {\r\n    ActionButtonState[ActionButtonState[\"Normal\"] = 0] = \"Normal\";\r\n    ActionButtonState[ActionButtonState[\"Expanded\"] = 1] = \"Expanded\";\r\n    ActionButtonState[ActionButtonState[\"Subdued\"] = 2] = \"Subdued\";\r\n})(ActionButtonState || (ActionButtonState = {}));\r\nvar ActionButton = /** @class */ (function () {\r\n    function ActionButton(action) {\r\n        var _this = this;\r\n        this._element = null;\r\n        this._state = ActionButtonState.Normal;\r\n        this.onClick = null;\r\n        this._action = action;\r\n        this._element = document.createElement(\"button\");\r\n        this._element.type = \"button\";\r\n        this._element.style.overflow = \"hidden\";\r\n        this._element.style.whiteSpace = \"nowrap\";\r\n        this._element.style.textOverflow = \"ellipsis\";\r\n        this._element.onclick = function (e) { _this.click(); };\r\n        this.updateCssStyle();\r\n    }\r\n    ActionButton.prototype.click = function () {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    };\r\n    ActionButton.prototype.updateCssStyle = function () {\r\n        this._element.className = \"ac-pushButton\";\r\n        if (this._action instanceof ShowCardAction) {\r\n            this._element.classList.add(\"expandable\");\r\n        }\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this._element.classList.add(\"expanded\");\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this._element.classList.add(\"subdued\");\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(ActionButton.prototype, \"action\", {\r\n        get: function () {\r\n            return this._action;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"text\", {\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            this._text = value;\r\n            this._element.innerText = this._text;\r\n            this._element.setAttribute(\"aria-label\", this._text);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"element\", {\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionButton.prototype, \"state\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        set: function (value) {\r\n            this._state = value;\r\n            this.updateCssStyle();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionButton;\r\n}());\r\nvar Action = /** @class */ (function () {\r\n    function Action() {\r\n        this._parent = null;\r\n        this._actionCollection = null; // hold the reference to its action collection\r\n    }\r\n    Action.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    Action.prototype.execute = function () {\r\n        raiseExecuteActionEvent(this);\r\n    };\r\n    Action.prototype.setCollection = function (actionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    };\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    Action.prototype.setStatus = function (status) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n        if (status) {\r\n            var statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    };\r\n    Action.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.prepare = function (inputs) {\r\n        // Do nothing in base implementation\r\n    };\r\n    ;\r\n    Action.prototype.parse = function (json) {\r\n        this.id = json[\"id\"];\r\n        this.title = json[\"title\"];\r\n    };\r\n    Action.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.getActionById = function (id) {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    };\r\n    Object.defineProperty(Action.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Action;\r\n}());\r\nexports.Action = Action;\r\nvar SubmitAction = /** @class */ (function (_super) {\r\n    __extends(SubmitAction, _super);\r\n    function SubmitAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._isPrepared = false;\r\n        return _this;\r\n    }\r\n    SubmitAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Submit\";\r\n    };\r\n    SubmitAction.prototype.prepare = function (inputs) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n        this._isPrepared = true;\r\n    };\r\n    SubmitAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.data = json[\"data\"];\r\n    };\r\n    Object.defineProperty(SubmitAction.prototype, \"data\", {\r\n        get: function () {\r\n            return this._isPrepared ? this._processedData : this._originalData;\r\n        },\r\n        set: function (value) {\r\n            this._originalData = value;\r\n            this._isPrepared = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SubmitAction;\r\n}(Action));\r\nexports.SubmitAction = SubmitAction;\r\nvar OpenUrlAction = /** @class */ (function (_super) {\r\n    __extends(OpenUrlAction, _super);\r\n    function OpenUrlAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OpenUrlAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.OpenUrl\";\r\n    };\r\n    OpenUrlAction.prototype.validate = function () {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    OpenUrlAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n    };\r\n    return OpenUrlAction;\r\n}(Action));\r\nexports.OpenUrlAction = OpenUrlAction;\r\nvar HttpHeader = /** @class */ (function () {\r\n    function HttpHeader() {\r\n        this._value = new Utils.StringWithSubstitutions();\r\n    }\r\n    HttpHeader.prototype.prepare = function (inputs) {\r\n        this._value.substituteInputValues(inputs);\r\n    };\r\n    Object.defineProperty(HttpHeader.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value.get();\r\n        },\r\n        set: function (newValue) {\r\n            this._value.set(newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpHeader;\r\n}());\r\nexports.HttpHeader = HttpHeader;\r\nvar HttpAction = /** @class */ (function (_super) {\r\n    __extends(HttpAction, _super);\r\n    function HttpAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._url = new Utils.StringWithSubstitutions();\r\n        _this._body = new Utils.StringWithSubstitutions();\r\n        _this._headers = [];\r\n        return _this;\r\n    }\r\n    HttpAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Http\";\r\n    };\r\n    HttpAction.prototype.validate = function () {\r\n        var result = [];\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.prepare = function (inputs) {\r\n        this._url.substituteInputValues(inputs);\r\n        this._body.substituteInputValues(inputs);\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n        }\r\n    };\r\n    ;\r\n    HttpAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"];\r\n            this._headers = [];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                var httpHeader = new HttpHeader();\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(HttpAction.prototype, \"url\", {\r\n        get: function () {\r\n            return this._url.get();\r\n        },\r\n        set: function (value) {\r\n            this._url.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"body\", {\r\n        get: function () {\r\n            return this._body.get();\r\n        },\r\n        set: function (value) {\r\n            this._body.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"headers\", {\r\n        get: function () {\r\n            return this._headers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpAction;\r\n}(Action));\r\nexports.HttpAction = HttpAction;\r\nvar ShowCardAction = /** @class */ (function (_super) {\r\n    __extends(ShowCardAction, _super);\r\n    function ShowCardAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.card = new InlineAdaptiveCard();\r\n        return _this;\r\n    }\r\n    ShowCardAction.prototype.setParent = function (value) {\r\n        _super.prototype.setParent.call(this, value);\r\n        invokeSetParent(this.card, value);\r\n    };\r\n    ShowCardAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.ShowCard\";\r\n    };\r\n    ShowCardAction.prototype.validate = function () {\r\n        return this.card.validate();\r\n    };\r\n    ShowCardAction.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        this.card.parse(json[\"card\"]);\r\n    };\r\n    ShowCardAction.prototype.getAllInputs = function () {\r\n        return this.card.getAllInputs();\r\n    };\r\n    ShowCardAction.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    return ShowCardAction;\r\n}(Action));\r\nexports.ShowCardAction = ShowCardAction;\r\nvar ActionCollection = /** @class */ (function () {\r\n    function ActionCollection(owner) {\r\n        this._actionButtons = [];\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n        this._statusCard = null;\r\n        this._actionCard = null;\r\n        this.items = [];\r\n        this.onHideActionCardPane = null;\r\n        this.onShowActionCardPane = null;\r\n        this._owner = owner;\r\n    }\r\n    ActionCollection.prototype.showStatusCard = function (status) {\r\n        invokeSetParent(status, this._owner);\r\n        this._statusCard = status.render();\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.hideStatusCard = function () {\r\n        this._statusCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.refreshContainer = function () {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n            if (this.onHideActionCardPane) {\r\n                this.onHideActionCardPane();\r\n            }\r\n            return;\r\n        }\r\n        if (this.onShowActionCardPane) {\r\n            this.onShowActionCardPane(null);\r\n        }\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n        var padding = this._owner.hostConfig.paddingToSpacingDefinition(this._owner.getNonZeroPadding());\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    };\r\n    ActionCollection.prototype.hideActionCard = function () {\r\n        if (this._expandedAction) {\r\n            raiseInlineCardExpandedEvent(this._expandedAction, false);\r\n        }\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.showActionCard = function (action, suppressStyle) {\r\n        if (suppressStyle === void 0) { suppressStyle = false; }\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n        action.card.suppressStyle = suppressStyle;\r\n        var renderedCard = action.card.render();\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n        this.refreshContainer();\r\n        raiseInlineCardExpandedEvent(action, true);\r\n    };\r\n    ActionCollection.prototype.actionClicked = function (actionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this._actionButtons.length; i++) {\r\n                this._actionButtons[i].state = ActionButtonState.Normal;\r\n            }\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    this._actionButtons[i].state = ActionButtonState.Normal;\r\n                }\r\n                this.hideActionCard();\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    if (this._actionButtons[i] !== actionButton) {\r\n                        this._actionButtons[i].state = ActionButtonState.Subdued;\r\n                    }\r\n                }\r\n                actionButton.state = ActionButtonState.Expanded;\r\n                this.showActionCard(actionButton.action);\r\n            }\r\n        }\r\n    };\r\n    ActionCollection.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push({\r\n                error: Enums.ValidationError.TooManyActions,\r\n                message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n            });\r\n        }\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push({\r\n                error: Enums.ValidationError.InteractivityNotAllowed,\r\n                message: \"Interactivity is not allowed.\"\r\n            });\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.render = function (orientation) {\r\n        var _this = this;\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n        var element = document.createElement(\"div\");\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n        if (AdaptiveCard.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n            this.showActionCard(this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.style.display = \"flex\";\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = new ActionButton(this.items[i]);\r\n                    actionButton.element.style.overflow = \"hidden\";\r\n                    actionButton.element.style.overflow = \"table-cell\";\r\n                    actionButton.element.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                    actionButton.text = this.items[i].title;\r\n                    actionButton.onClick = function (ab) { _this.actionClicked(ab); };\r\n                    this._actionButtons.push(actionButton);\r\n                    buttonStrip.appendChild(actionButton.element);\r\n                    this._renderedActionCount++;\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    };\r\n    ActionCollection.prototype.addAction = function (action) {\r\n        if (!action.parent) {\r\n            this.items.push(action);\r\n            invokeSetParent(action, this._owner);\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    };\r\n    ActionCollection.prototype.clear = function () {\r\n        this.items = [];\r\n    };\r\n    ActionCollection.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    return ActionCollection;\r\n}());\r\nvar ActionSet = /** @class */ (function (_super) {\r\n    __extends(ActionSet, _super);\r\n    function ActionSet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.orientation = null;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        _this._actionCollection.onHideActionCardPane = function () { _this.showBottomSpacer(_this); };\r\n        _this._actionCollection.onShowActionCardPane = function (action) { _this.hideBottomSpacer(_this); };\r\n        return _this;\r\n    }\r\n    ActionSet.prototype.internalRender = function () {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation);\r\n    };\r\n    ActionSet.prototype.getJsonTypeName = function () {\r\n        return \"ActionSet\";\r\n    };\r\n    ActionSet.prototype.validate = function () {\r\n        return this._actionCollection.validate();\r\n    };\r\n    ActionSet.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonOrientation = json[\"orientation\"];\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                this.addAction(createActionInstance(jsonActions[i]));\r\n            }\r\n        }\r\n    };\r\n    ActionSet.prototype.addAction = function (action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ActionSet.prototype.getAllInputs = function () {\r\n        return this._actionCollection.getAllInputs();\r\n    };\r\n    ActionSet.prototype.renderSpeech = function () {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionSet;\r\n}(CardElement));\r\nexports.ActionSet = ActionSet;\r\nvar BackgroundImage = /** @class */ (function () {\r\n    function BackgroundImage() {\r\n        this.mode = Enums.BackgroundImageMode.Stretch;\r\n        this.horizontalAlignment = Enums.HorizontalAlignment.Left;\r\n        this.verticalAlignment = Enums.VerticalAlignment.Top;\r\n    }\r\n    BackgroundImage.prototype.parse = function (json) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    };\r\n    BackgroundImage.prototype.apply = function (element) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return BackgroundImage;\r\n}());\r\nexports.BackgroundImage = BackgroundImage;\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._items = [];\r\n        _this._style = null;\r\n        _this.bleed = false;\r\n        _this.verticalContentAlignment = Enums.VerticalAlignment.Top;\r\n        return _this;\r\n    }\r\n    Container.prototype.isElementAllowed = function (element, forbiddenElementTypes) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasExplicitStyle\", {\r\n        get: function () {\r\n            return this._style != null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.showBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n            _super.prototype.showBottomSpacer.call(this, requestingElement);\r\n        }\r\n    };\r\n    Container.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n            _super.prototype.hideBottomSpacer.call(this, requestingElement);\r\n        }\r\n    };\r\n    Container.prototype.applyPadding = function () {\r\n        if (this.hasBackground) {\r\n            var physicalMargin = new HostConfig.SpacingDefinition();\r\n            var physicalPadding = new HostConfig.SpacingDefinition();\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && this.bleed;\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin = new HostConfig.PaddingDefinition({\r\n                    top: effectivePadding.top,\r\n                    right: effectivePadding.right,\r\n                    bottom: effectivePadding.bottom,\r\n                    left: effectivePadding.left,\r\n                });\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Padding.None;\r\n                    effectiveMargin.top = Enums.Padding.None;\r\n                }\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Padding.None;\r\n                    effectiveMargin.bottom = Enums.Padding.None;\r\n                }\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Padding.None;\r\n                    effectiveMargin.left = Enums.Padding.None;\r\n                }\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Padding.None;\r\n                    effectiveMargin.right = Enums.Padding.None;\r\n                }\r\n                if (effectivePadding.left != Enums.Padding.None || effectivePadding.right != Enums.Padding.None) {\r\n                    if (effectivePadding.left == Enums.Padding.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Padding.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Padding.None || effectivePadding.bottom != Enums.Padding.None) {\r\n                    if (effectivePadding.top == Enums.Padding.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Padding.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Padding.None\r\n                    || effectivePadding.right != Enums.Padding.None\r\n                    || effectivePadding.bottom != Enums.Padding.None\r\n                    || effectivePadding.left != Enums.Padding.None) {\r\n                    if (effectivePadding.top == Enums.Padding.None) {\r\n                        effectivePadding.top = Enums.Padding.Default;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Padding.None) {\r\n                        effectivePadding.right = Enums.Padding.Default;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Padding.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            bottom: Enums.Padding.Default\r\n                        });\r\n                    }\r\n                    if (effectivePadding.left == Enums.Padding.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            left: Enums.Padding.Default\r\n                        });\r\n                    }\r\n                }\r\n                if (effectivePadding.top == Enums.Padding.None &&\r\n                    effectivePadding.right == Enums.Padding.None &&\r\n                    effectivePadding.bottom == Enums.Padding.None &&\r\n                    effectivePadding.left == Enums.Padding.None) {\r\n                    effectivePadding = new HostConfig.PaddingDefinition({\r\n                        top: Enums.Padding.Default,\r\n                        right: Enums.Padding.Default,\r\n                        bottom: Enums.Padding.Default,\r\n                        left: Enums.Padding.Default,\r\n                    });\r\n                }\r\n                physicalMargin = this.hostConfig.paddingToSpacingDefinition(effectiveMargin);\r\n                physicalPadding = this.hostConfig.paddingToSpacingDefinition(effectivePadding);\r\n            }\r\n            else {\r\n                physicalPadding = this.hostConfig.paddingToSpacingDefinition(new HostConfig.PaddingDefinition({\r\n                    top: Enums.Padding.Default,\r\n                    right: Enums.Padding.Default,\r\n                    bottom: Enums.Padding.Default,\r\n                    left: Enums.Padding.Default\r\n                }));\r\n            }\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Container.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-container\";\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n            var styleDefinition = this.hostConfig.getContainerStyleDefinition(this.style);\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n        if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n            element.classList.add(\"ac-selectable\");\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        if (this._items.length > 0) {\r\n            var renderedElementCount = 0;\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n                if (renderedElement) {\r\n                    if (renderedElementCount > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedElement);\r\n                    renderedElementCount++;\r\n                }\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            return Enums.ContainerStyle.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"style\", {\r\n        get: function () {\r\n            if (this.allowCustomStyle) {\r\n                return this._style ? this._style : this.defaultStyle;\r\n            }\r\n            else {\r\n                return this.defaultStyle;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.getJsonTypeName = function () {\r\n        return \"Container\";\r\n    };\r\n    Container.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.isLastElement = function (element) {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.validate = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n            }\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                });\r\n            }\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"]);\r\n            }\r\n        }\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n        this._style = Utils.getEnumValueOrDefault(Enums.ContainerStyle, json[\"style\"], null);\r\n        if (json[itemsCollectionPropertyName] != null) {\r\n            var items = json[itemsCollectionPropertyName];\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n                if (!element) {\r\n                    raiseParseError({\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + elementType\r\n                    });\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n                    element.parse(items[i]);\r\n                }\r\n            }\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n    };\r\n    Container.prototype.addItem = function (item) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                this._items.push(item);\r\n                invokeSetParent(item, this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\");\r\n        }\r\n    };\r\n    Container.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    Container.prototype.canContentBleed = function () {\r\n        return this.hasBackground ? false : _super.prototype.canContentBleed.call(this);\r\n    };\r\n    Container.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = null;\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Container.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                invokeSetParent(this._selectAction, this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Container;\r\n}(CardElement));\r\nexports.Container = Container;\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._computedWeight = 0;\r\n        _this.width = \"auto\";\r\n        _this.pixelWidth = 0;\r\n        return _this;\r\n    }\r\n    Column.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        renderedElement.style.minWidth = \"0\";\r\n        if (this.pixelWidth > 0) {\r\n            renderedElement.style.flex = \"0 0 \" + this.pixelWidth + \"px\";\r\n        }\r\n        else {\r\n            if (typeof this.width === \"number\") {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width) + \"%\";\r\n            }\r\n            else if (this.width === \"auto\") {\r\n                renderedElement.style.flex = \"0 1 auto\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 50px\";\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Vertical;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.getJsonTypeName = function () {\r\n        return \"Column\";\r\n    };\r\n    Column.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        var jsonWidth = json[\"width\"];\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                });\r\n            }\r\n        }\r\n        var invalidWidth = false;\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth <= 0) {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                var sizeAsNumber = parseInt(jsonWidth);\r\n                if (!isNaN(sizeAsNumber)) {\r\n                    jsonWidth = sizeAsNumber;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n        if (invalidWidth) {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid column width: \" + jsonWidth\r\n            });\r\n        }\r\n        else {\r\n            this.width = jsonWidth;\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexports.Column = Column;\r\nvar ColumnSet = /** @class */ (function (_super) {\r\n    __extends(ColumnSet, _super);\r\n    function ColumnSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._columns = [];\r\n        return _this;\r\n    }\r\n    ColumnSet.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this._columns.length > 0) {\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-columnSet\";\r\n            element.style.display = \"flex\";\r\n            if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n                element.classList.add(\"ac-selectable\");\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var totalWeight = 0;\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\") {\r\n                    totalWeight += this._columns[i].width;\r\n                }\r\n            }\r\n            var renderedColumnCount = 0;\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\" && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * this._columns[i].width;\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    this._columns[i][\"_computedWeight\"] = computedWeight;\r\n                }\r\n                var renderedColumn = this._columns[i].render();\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && this._columns[i].separatorElement) {\r\n                        this._columns[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._columns[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedColumn);\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ColumnSet.prototype.getJsonTypeName = function () {\r\n        return \"ColumnSet\";\r\n    };\r\n    ColumnSet.prototype.parse = function (json) {\r\n        _super.prototype.parse.call(this, json);\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n        if (json[\"columns\"] != null) {\r\n            var jsonColumns = json[\"columns\"];\r\n            this._columns = [];\r\n            for (var i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n                column.parse(jsonColumns[i]);\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.validate = function () {\r\n        var result = [];\r\n        var weightedColumns = 0;\r\n        var stretchedColumns = 0;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push({\r\n                error: Enums.ValidationError.Hint,\r\n                message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.addColumn = function (column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n            invokeSetParent(column, this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    };\r\n    ColumnSet.prototype.isLeftMostElement = function (element) {\r\n        return this._columns.indexOf(element) == 0;\r\n    };\r\n    ColumnSet.prototype.isRightMostElement = function (element) {\r\n        return this._columns.indexOf(element) == this._columns.length - 1;\r\n    };\r\n    ColumnSet.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = '';\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                invokeSetParent(this._selectAction, this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSet;\r\n}(CardElement));\r\nexports.ColumnSet = ColumnSet;\r\nvar Version = /** @class */ (function () {\r\n    function Version(major, minor) {\r\n        if (major === void 0) { major = 1; }\r\n        if (minor === void 0) { minor = 1; }\r\n        this._isValid = true;\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n    Version.parse = function (versionString) {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n        return result;\r\n    };\r\n    Version.prototype.toString = function () {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    };\r\n    Object.defineProperty(Version.prototype, \"major\", {\r\n        get: function () {\r\n            return this._major;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"minor\", {\r\n        get: function () {\r\n            return this._minor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._isValid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Version;\r\n}());\r\nexports.Version = Version;\r\nfunction raiseAnchorClickedEvent(element, anchor) {\r\n    var card = element.getRootElement();\r\n    var onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(anchor) : false;\r\n}\r\nfunction raiseExecuteActionEvent(action) {\r\n    var card = action.parent.getRootElement();\r\n    var onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\r\n    var card = action.parent.getRootElement();\r\n    var onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\nfunction raiseElementVisibilityChangedEvent(element) {\r\n    element.getRootElement().updateLayout();\r\n    var card = element.getRootElement();\r\n    var onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\nfunction raiseParseElementEvent(element, json) {\r\n    var card = element.getRootElement();\r\n    var onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json);\r\n    }\r\n}\r\nfunction raiseParseError(error) {\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\nvar ContainerWithActions = /** @class */ (function (_super) {\r\n    __extends(ContainerWithActions, _super);\r\n    function ContainerWithActions() {\r\n        var _this = _super.call(this) || this;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        _this._actionCollection.onHideActionCardPane = function () { _this.showBottomSpacer(null); };\r\n        _this._actionCollection.onShowActionCardPane = function (action) { _this.hideBottomSpacer(null); };\r\n        return _this;\r\n    }\r\n    ContainerWithActions.prototype.internalRender = function () {\r\n        var element = _super.prototype.internalRender.call(this);\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);\r\n        if (renderedActions) {\r\n            Utils.appendChild(element, Utils.renderSeparation({\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                lineThickness: null,\r\n                lineColor: null\r\n            }, Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n        return element.children.length > 0 ? element : null;\r\n    };\r\n    ContainerWithActions.prototype.getActionById = function (id) {\r\n        var result = this._actionCollection.getActionById(id);\r\n        return result ? result : _super.prototype.getActionById.call(this, id);\r\n    };\r\n    ContainerWithActions.prototype.parse = function (json, itemsCollectionPropertyName) {\r\n        if (itemsCollectionPropertyName === void 0) { itemsCollectionPropertyName = \"items\"; }\r\n        _super.prototype.parse.call(this, json, itemsCollectionPropertyName);\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i]);\r\n                if (action != null) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.validate = function () {\r\n        var result = _super.prototype.validate.call(this);\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.isLastElement = function (element) {\r\n        return _super.prototype.isLastElement.call(this, element) && this._actionCollection.items.length == 0;\r\n    };\r\n    ContainerWithActions.prototype.addAction = function (action) {\r\n        this._actionCollection.addAction(action);\r\n    };\r\n    ContainerWithActions.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._actionCollection.clear();\r\n    };\r\n    ContainerWithActions.prototype.getAllInputs = function () {\r\n        return _super.prototype.getAllInputs.call(this).concat(this._actionCollection.getAllInputs());\r\n    };\r\n    Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerWithActions;\r\n}(Container));\r\nexports.ContainerWithActions = ContainerWithActions;\r\nvar TypeRegistry = /** @class */ (function () {\r\n    function TypeRegistry() {\r\n        this._items = [];\r\n        this.reset();\r\n    }\r\n    TypeRegistry.prototype.findTypeRegistration = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TypeRegistry.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    TypeRegistry.prototype.registerType = function (typeName, createInstance) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            };\r\n            this._items.push(registrationInfo);\r\n        }\r\n    };\r\n    TypeRegistry.prototype.unregisterType = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    TypeRegistry.prototype.createInstance = function (typeName) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    };\r\n    return TypeRegistry;\r\n}());\r\nexports.TypeRegistry = TypeRegistry;\r\nvar ElementTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ElementTypeRegistry, _super);\r\n    function ElementTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ElementTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Container\", function () { return new Container(); });\r\n        this.registerType(\"TextBlock\", function () { return new TextBlock(); });\r\n        this.registerType(\"Image\", function () { return new Image(); });\r\n        this.registerType(\"ImageSet\", function () { return new ImageSet(); });\r\n        this.registerType(\"FactSet\", function () { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", function () { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", function () { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", function () { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", function () { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", function () { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", function () { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", function () { return new ToggleInput(); });\r\n    };\r\n    return ElementTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ElementTypeRegistry = ElementTypeRegistry;\r\nvar ActionTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ActionTypeRegistry, _super);\r\n    function ActionTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActionTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Action.OpenUrl\", function () { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", function () { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", function () { return new ShowCardAction(); });\r\n    };\r\n    return ActionTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ActionTypeRegistry = ActionTypeRegistry;\r\nvar AdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(AdaptiveCard, _super);\r\n    function AdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.onAnchorClicked = null;\r\n        _this.onExecuteAction = null;\r\n        _this.onElementVisibilityChanged = null;\r\n        _this.onInlineCardExpanded = null;\r\n        _this.onParseElement = null;\r\n        _this.version = new Version(1, 0);\r\n        _this.type = \"AdaptiveCard\";\r\n        return _this;\r\n    }\r\n    AdaptiveCard.prototype.isVersionSupported = function () {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion = !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n            return !unsupportedVersion;\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.showBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.hideBottomSpacer = function (requestingElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.applyPadding = function () {\r\n        var effectivePadding = this.hostConfig.paddingToSpacingDefinition(this.internalPadding);\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new HostConfig.PaddingDefinition({\r\n                top: Enums.Padding.Default,\r\n                right: Enums.Padding.Default,\r\n                bottom: Enums.Padding.Default,\r\n                left: Enums.Padding.Default\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.prototype.getJsonTypeName = function () {\r\n        return \"AdaptiveCard\";\r\n    };\r\n    AdaptiveCard.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push({\r\n                error: Enums.ValidationError.MissingCardType,\r\n                message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n            });\r\n        }\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n            });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push({\r\n                error: Enums.ValidationError.UnsupportedCardVersion,\r\n                message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n            });\r\n        }\r\n        return result.concat(_super.prototype.validate.call(this));\r\n    };\r\n    AdaptiveCard.prototype.parse = function (json) {\r\n        this._cardTypeName = json[\"type\"];\r\n        this.version = Version.parse(json[\"version\"]);\r\n        this.fallbackText = json[\"fallbackText\"];\r\n        _super.prototype.parse.call(this, json, \"body\");\r\n    };\r\n    AdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard;\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = _super.prototype.render.call(this);\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n        return renderedCard;\r\n    };\r\n    AdaptiveCard.prototype.canContentBleed = function () {\r\n        return true;\r\n    };\r\n    AdaptiveCard.currentVersion = new Version(1, 0);\r\n    AdaptiveCard.preExpandSingleShowCardAction = false;\r\n    AdaptiveCard.useAdvancedTextBlockTruncation = true;\r\n    AdaptiveCard.elementTypeRegistry = new ElementTypeRegistry();\r\n    AdaptiveCard.actionTypeRegistry = new ActionTypeRegistry();\r\n    AdaptiveCard.onAnchorClicked = null;\r\n    AdaptiveCard.onExecuteAction = null;\r\n    AdaptiveCard.onElementVisibilityChanged = null;\r\n    AdaptiveCard.onInlineCardExpanded = null;\r\n    AdaptiveCard.onParseElement = null;\r\n    AdaptiveCard.onParseError = null;\r\n    AdaptiveCard.processMarkdown = function (text) {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n        return text;\r\n    };\r\n    return AdaptiveCard;\r\n}(ContainerWithActions));\r\nexports.AdaptiveCard = AdaptiveCard;\r\nvar InlineAdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(InlineAdaptiveCard, _super);\r\n    function InlineAdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.suppressStyle = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new HostConfig.PaddingDefinition({\r\n                top: this.suppressStyle ? Enums.Padding.None : Enums.Padding.Default,\r\n                right: Enums.Padding.Default,\r\n                bottom: this.suppressStyle ? Enums.Padding.None : Enums.Padding.Default,\r\n                left: Enums.Padding.Default\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            if (this.suppressStyle) {\r\n                return Enums.ContainerStyle.Default;\r\n            }\r\n            else {\r\n                return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InlineAdaptiveCard.prototype.render = function () {\r\n        var renderedCard = _super.prototype.render.call(this);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n        return renderedCard;\r\n    };\r\n    InlineAdaptiveCard.prototype.getForbiddenActionTypes = function () {\r\n        return [ShowCardAction];\r\n    };\r\n    return InlineAdaptiveCard;\r\n}(AdaptiveCard));\r\nvar defaultHostConfig = new HostConfig.HostConfig({\r\n    supportsInteractivity: true,\r\n    fontFamily: \"Segoe UI\",\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontSizes: {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    },\r\n    fontWeights: {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    normal: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                accent: {\r\n                    normal: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    normal: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    normal: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    normal: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    normal: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                accent: {\r\n                    normal: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    normal: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    normal: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    normal: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150,\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true,\r\n        },\r\n        spacing: 10\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractTextFormatter = /** @class */ (function () {\r\n    function AbstractTextFormatter(regularExpression) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n    AbstractTextFormatter.prototype.format = function (input) {\r\n        var matches;\r\n        var result = input;\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(matches));\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return AbstractTextFormatter;\r\n}());\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    function DateFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateFormatter.prototype.internalFormat = function (matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(undefined, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    };\r\n    return DateFormatter;\r\n}(AbstractTextFormatter));\r\nvar TimeFormatter = /** @class */ (function (_super) {\r\n    __extends(TimeFormatter, _super);\r\n    function TimeFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeFormatter.prototype.internalFormat = function (matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        return date.toLocaleTimeString(undefined, { hour: 'numeric', minute: '2-digit' });\r\n    };\r\n    return TimeFormatter;\r\n}(AbstractTextFormatter));\r\nfunction formatText(text) {\r\n    var formatters = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n    var result = text;\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(result);\r\n    }\r\n    return result;\r\n}\r\nexports.formatText = formatText;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar adaptivecards_1 = __webpack_require__(1);\r\nfunction renderCard(card, options, target) {\r\n    if (typeof card === \"string\") {\r\n        card = JSON.parse(card);\r\n    }\r\n    options = options || {};\r\n    // Setup a card\r\n    var adaptiveCard = new adaptivecards_1.AdaptiveCard();\r\n    if (typeof options.hostConfig === \"string\") {\r\n        adaptiveCard.hostConfig = new adaptivecards_1.HostConfig(JSON.parse(options.hostConfig));\r\n    }\r\n    else if (typeof options.hostConfig === \"object\" && !(options.hostConfig instanceof adaptivecards_1.HostConfig)) {\r\n        adaptiveCard.hostConfig = new adaptivecards_1.HostConfig(options.hostConfig);\r\n    }\r\n    else {\r\n        adaptiveCard.hostConfig = options.hostConfig;\r\n    }\r\n    adaptiveCard.onAnchorClicked = options.onAnchorClicked;\r\n    adaptiveCard.onExecuteAction = options.onExecuteAction;\r\n    adaptiveCard.onElementVisibilityChanged = options.onElementVisibilityChanged;\r\n    adaptiveCard.onInlineCardExpanded = options.onInlineCardExpanded;\r\n    adaptiveCard.onParseElement = options.onParseElement;\r\n    if (options.processMarkdown) {\r\n        adaptivecards_1.AdaptiveCard.processMarkdown = options.processMarkdown;\r\n    }\r\n    // Parse the card\r\n    adaptiveCard.parse(card);\r\n    // Render the card\r\n    return adaptiveCard.render(target);\r\n}\r\nexports.renderCard = renderCard;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// adaptivecards.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 083c7e7e2050de693a17","export enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum Padding {\r\n    None,\r\n    Default\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum BackgroundImageMode {\r\n    Stretch,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ContainerStyle {\r\n    Default,\r\n    Emphasis\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/enums.ts","export * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\nexport { renderCard } from \"./rendercard\";\n\n\n// WEBPACK FOOTER //\n// ./src/adaptivecards.ts","import * as Enums from \"./enums\";\r\nimport * as HostConfig from \"./host-config\";\r\n\r\nexport interface ISeparationDefinition {\r\n    spacing: number,\r\n    lineThickness?: number,\r\n    lineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n    id: string;\r\n    value: string;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function getEnumValueOrDefault(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(separationDefinition: ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport class StringWithSubstitutions {\r\n    private _isProcessed: boolean = false;\r\n    private _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    substituteInputValues(inputs: Array<IInput>) {\r\n        this._processed = this._original;\r\n\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput: IInput = null;\r\n\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (matchedInput) {\r\n                this._processed = this._processed.replace(matches[0], matchedInput.value ? matchedInput.value : \"\");\r\n            }\r\n        };\r\n\r\n        this._isProcessed = true;\r\n    }\r\n\r\n    get(): string {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    }\r\n\r\n    set(value: string) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n                         maxHeight: number,\r\n                         lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\n\r\nexport class SpacingDefinition {\r\n    left: number = 0;\r\n    top: number = 0;\r\n    right: number = 0;\r\n    bottom: number = 0;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.top = obj[\"top\"] || this.top;\r\n            this.right = obj[\"right\"] || this.right;\r\n            this.bottom = obj[\"bottom\"] || this.bottom;\r\n            this.left = obj[\"left\"] || this.left;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PaddingDefinition {\r\n    top: Enums.Padding = Enums.Padding.None;\r\n    right: Enums.Padding = Enums.Padding.None;\r\n    bottom: Enums.Padding = Enums.Padding.None;\r\n    left: Enums.Padding = Enums.Padding.None;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.top = Utils.parseHostConfigEnum(Enums.Padding, obj[\"top\"], Enums.Padding.None);\r\n            this.right = Utils.parseHostConfigEnum(Enums.Padding, obj[\"right\"], Enums.Padding.None);\r\n            this.bottom = Utils.parseHostConfigEnum(Enums.Padding, obj[\"bottom\"], Enums.Padding.None);\r\n            this.left = Utils.parseHostConfigEnum(Enums.Padding, obj[\"left\"], Enums.Padding.None);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            top: Enums.Padding[this.top],\r\n            right: Enums.Padding[this.right],\r\n            bottom: Enums.Padding[this.bottom],\r\n            left: Enums.Padding[this.left],\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition {\r\n    normal: string = \"#000000\";\r\n    subtle: string = \"#222222\";\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.normal = obj[\"normal\"] || this.normal;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n    readonly foregroundColors = {\r\n        default: new TextColorDefinition(),\r\n        accent: new TextColorDefinition(),\r\n        good: new TextColorDefinition(),\r\n        warning: new TextColorDefinition(),\r\n        attention: new TextColorDefinition()\r\n    };\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n            this.foregroundColors = {\r\n                default: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"default\"]),\r\n                accent: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"accent\"]),\r\n                good: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"good\"]),\r\n                warning: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"warning\"]),\r\n                attention: new TextColorDefinition(obj.foregroundColors && obj.foregroundColors[\"attention\"])\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(\"maxImageHeight\", 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Default);\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            warp: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: Enums.ContainerStyle = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = Utils.parseHostConfigEnum(Enums.ContainerStyle, obj[\"style\"], Enums.ContainerStyle.Emphasis);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: Enums.ContainerStyle[this.style]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    readonly default: ContainerStyleDefinition = new ContainerStyleDefinition();\r\n    readonly emphasis: ContainerStyleDefinition = new ContainerStyleDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.emphasis.backgroundColor = \"#EEEEEE\";\r\n        \r\n        if (obj) {\r\n            this.default = new ContainerStyleDefinition(obj[\"default\"]);\r\n            this.emphasis = new ContainerStyleDefinition(obj[\"emphasis\"])\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    supportsInteractivity: boolean = true;\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n    \r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly fontSizes = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n    readonly fontWeights = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    getEffectivePadding(padding: Enums.Padding): number {\r\n        switch (padding) {\r\n            case Enums.Padding.Default:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    paddingToSpacingDefinition(padding: PaddingDefinition): SpacingDefinition {\r\n        return new SpacingDefinition({\r\n            top: this.getEffectivePadding(padding.top),\r\n            right: this.getEffectivePadding(padding.right),\r\n            bottom: this.getEffectivePadding(padding.bottom),\r\n            left: this.getEffectivePadding(padding.left)\r\n        })\r\n    }\r\n\r\n    getContainerStyleDefinition(containerStyle: Enums.ContainerStyle) {\r\n        switch (containerStyle) {\r\n            case Enums.ContainerStyle.Emphasis:\r\n                return this.containerStyles.emphasis;\r\n            default:\r\n                return this.containerStyles.default;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/host-config.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\nimport { IAdaptiveCard } from \"./schema\";\r\n\r\nfunction invokeSetParent(obj: any, parent: CardElement) {\r\n    if (obj) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        obj[\"setParent\"](parent);\r\n    }\r\n}\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction createActionInstance(json: any): Action {\r\n    var actionType = json[\"type\"];\r\n\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n\r\n    if (result) {\r\n        result.parse(json);\r\n    }\r\n    else {\r\n        raiseParseError(\r\n            {\r\n                error: Enums.ValidationError.UnknownActionType,\r\n                message: \"Unknown action type: \" + actionType\r\n            });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport abstract class CardElement {\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _internalPadding: HostConfig.PaddingDefinition = null;\r\n    private _parent: CardElement = null;\r\n    private _isVisibile: boolean = true;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _rootCard: AdaptiveCard;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        return Utils.renderSeparation(\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.visibility = this._isVisibile ? null : \"collapse\";\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            this._separatorElement.style.visibility = this._isVisibile ? null : \"collapse\";\r\n        }\r\n    }\r\n\r\n    protected internalGetNonZeroPadding(padding: HostConfig.PaddingDefinition) {\r\n        if (padding.top == Enums.Padding.None) {\r\n            padding.top = this.internalPadding.top;\r\n        }\r\n\r\n        if (padding.right == Enums.Padding.None) {\r\n            padding.right = this.internalPadding.right;\r\n        }\r\n\r\n        if (padding.bottom == Enums.Padding.None) {\r\n            padding.bottom = this.internalPadding.bottom;\r\n        }\r\n\r\n        if (padding.left == Enums.Padding.None) {\r\n            padding.left = this.internalPadding.left;\r\n        }\r\n\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(padding);\r\n        }\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 100%\";\r\n        }\r\n    }\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if (this.parent) {\r\n            this.parent.showBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if (this.parent) {\r\n            this.parent.hideBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): HostConfig.PaddingDefinition {\r\n        return new HostConfig.PaddingDefinition(\r\n            {\r\n                top: Enums.Padding.None,\r\n                right: Enums.Padding.None,\r\n                bottom: Enums.Padding.None,\r\n                left: Enums.Padding.None\r\n            });\r\n    }\r\n\r\n    protected get internalPadding(): HostConfig.PaddingDefinition {\r\n        return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n    }\r\n\r\n    protected set internalPadding(value: HostConfig.PaddingDefinition) {\r\n        this._internalPadding = value;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    id: string;\r\n    speak: string;\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    height: \"auto\" | \"stretch\" = \"auto\";\r\n\r\n    abstract getJsonTypeName(): string;\r\n    abstract renderSpeech(): string;\r\n\r\n    getNonZeroPadding(): HostConfig.PaddingDefinition {\r\n        var padding: HostConfig.PaddingDefinition = new HostConfig.PaddingDefinition(\r\n            {\r\n                top: Enums.Padding.None,\r\n                right: Enums.Padding.None,\r\n                bottom: Enums.Padding.None,\r\n                left: Enums.Padding.None\r\n            });\r\n\r\n        this.internalGetNonZeroPadding(padding);\r\n\r\n        return padding;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    parse(json: any) {\r\n        raiseParseElementEvent(this, json);\r\n\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n\r\n        var jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                });\r\n        }\r\n\r\n        var jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n            this.updateRenderedElementVisibility();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        // Does nothing in base implementation\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisibile;\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        if (this._isVisibile != value) {\r\n            this._isVisibile = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport class TextBlock extends CardElement {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    text: string;\r\n    isSubtle: boolean = false;\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var element = document.createElement(\"div\");\r\n            element.style.overflow = \"hidden\";\r\n\r\n            if (this.hostConfig.fontFamily) {\r\n                element.style.fontFamily = this.hostConfig.fontFamily;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = \"left\";\r\n                    break;\r\n            }\r\n\r\n            var cssStyle = \"text \";\r\n            var fontSize: number;\r\n\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    fontSize = this.hostConfig.fontSizes.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    fontSize = this.hostConfig.fontSizes.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    fontSize = this.hostConfig.fontSizes.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                    break;\r\n                default:\r\n                    fontSize = this.hostConfig.fontSizes.default;\r\n                    break;\r\n            }\r\n\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n\r\n            element.style.fontSize = fontSize + \"px\";\r\n            element.style.lineHeight = this._computedLineHeight + \"px\";\r\n\r\n            var parentContainer = this.getParentContainer();\r\n            var styleDefinition = this.hostConfig.getContainerStyleDefinition(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default);\r\n\r\n            var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n            var colorDefinition: HostConfig.TextColorDefinition;\r\n\r\n            switch (actualTextColor) {\r\n                case Enums.TextColor.Accent:\r\n                    colorDefinition = styleDefinition.foregroundColors.accent;\r\n                    break;\r\n                case Enums.TextColor.Good:\r\n                    colorDefinition = styleDefinition.foregroundColors.good;\r\n                    break;\r\n                case Enums.TextColor.Warning:\r\n                    colorDefinition = styleDefinition.foregroundColors.warning;\r\n                    break;\r\n                case Enums.TextColor.Attention:\r\n                    colorDefinition = styleDefinition.foregroundColors.attention;\r\n                    break;\r\n                default:\r\n                    colorDefinition = styleDefinition.foregroundColors.default;\r\n                    break;\r\n            }\r\n\r\n            element.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.normal);\r\n\r\n            var fontWeight: number;\r\n\r\n            switch (this.weight) {\r\n                case Enums.TextWeight.Lighter:\r\n                    fontWeight = this.hostConfig.fontWeights.lighter;\r\n                    break;\r\n                case Enums.TextWeight.Bolder:\r\n                    fontWeight = this.hostConfig.fontWeights.bolder;\r\n                    break;\r\n                default:\r\n                    fontWeight = this.hostConfig.fontWeights.default;\r\n                    break;\r\n            }\r\n\r\n            element.style.fontWeight = fontWeight.toString();\r\n\r\n            var formattedText = TextFormatters.formatText(this.text);\r\n\r\n            element.innerHTML = AdaptiveCard.processMarkdown(formattedText);\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(\"ac-anchor\");\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, anchor)) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.text = json[\"text\"];\r\n\r\n        var sizeString = json[\"size\"];\r\n\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        var weightString = json[\"weight\"];\r\n\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        this.maxLines = json[\"maxLines\"];\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n\r\n        return null;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.renderedElement.innerHTML = this._originalInnerHtml;\r\n            this.truncateIfSupported();\r\n        }\r\n    }\r\n\r\n    private truncateIfSupported() {\r\n        if (this.maxLines && this.renderedElement.scrollHeight) {\r\n            // For now, only truncate TextBlocks that contain just a single\r\n            // paragraph -- since the maxLines calculation doesn't take into\r\n            // account Markdown lists\r\n            var children = this.renderedElement.children;\r\n            var truncationSupported = children.length == 1\r\n                && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n            if (truncationSupported) {\r\n                var element = <HTMLElement>children[0];\r\n                var maxHeight = this._computedLineHeight * this.maxLines;\r\n                Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n    speak: string;\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        // render each fact\r\n        let speak = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                let speech = this.facts[i].renderSpeech();\r\n\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.classList.add(\"ac-image\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            if (this.selectAction != null && this.hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(\"ac-selectable\");\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) { // enter or space pressed\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n\r\n            if (this.pixelWidth || this.pixelHeight) {\r\n                if (this.pixelWidth) {\r\n                    imageElement.style.width = this.pixelWidth + \"px\";\r\n                }\r\n\r\n                if (this.pixelHeight) {\r\n                    imageElement.style.height = this.pixelHeight + \"px\";\r\n                }\r\n            }\r\n            else {\r\n                switch (this.size) {\r\n                    case Enums.Size.Stretch:\r\n                        imageElement.style.width = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Auto:\r\n                        imageElement.style.maxWidth = \"100%\";\r\n                        break;\r\n                    case Enums.Size.Small:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                        break;\r\n                    case Enums.Size.Large:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                        break;\r\n                    case Enums.Size.Medium:\r\n                        imageElement.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n\r\n        var styleString = json[\"style\"];\r\n\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                });\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            invokeSetParent(this._selectAction, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElement {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        //this.imageSize = Utils.getValueOrDefault<Enums.Size>(json[\"imageSize\"], Enums.Size.medium);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n            this._images = [];\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i]);\r\n                image.size = this.imageSize;\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            invokeSetParent(image, this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        var speak = null;\r\n\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Utils.IInput {\r\n    id: string;\r\n    title: string;\r\n    defaultValue: string;\r\n\r\n    abstract get value(): string;\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _textareaElement: HTMLTextAreaElement;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = \"ac-input ac-textInput ac-multiline\";\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = \"text\";\r\n            this._inputElement.className = \"ac-input ac-textInput\";\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            return this._inputElement;\r\n        }\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.isMultiline) {\r\n            return this._textareaElement ? this._textareaElement.value : null;\r\n        }\r\n        else {\r\n            return this._inputElement ? this._inputElement.value : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-input\";\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        var label = new TextBlock();\r\n        label.hostConfig = this.hostConfig;\r\n        label.text = this.title;\r\n\r\n        var labelElement = label.render();\r\n        labelElement.style.display = \"inline-block\";\r\n        labelElement.style.marginLeft = \"6px\";\r\n        labelElement.style.verticalAlign = \"middle\";\r\n\r\n        var compoundInput = document.createElement(\"div\");\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        Utils.appendChild(element, labelElement);\r\n\r\n        return element;\r\n    }\r\n\r\n    title: string;\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.title = json[\"title\"];\r\n\r\n        this.valueOn = Utils.getValueOrDefault<string>(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault<string>(json[\"valueOff\"], this.valueOff);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = \"ac-input ac-multichoiceInput\";\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var element = document.createElement(\"div\");\r\n                element.className = \"ac-input\";\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    var label = new TextBlock();\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = this.choices[i].title;\r\n\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(\",\") : null;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-input\";\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                var label = new TextBlock();\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = this.choices[i].title;\r\n\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean;\r\n    isMultiSelect: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }])\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"] as Array<any>;\r\n            this.choices = [];\r\n\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                return this._selectElement ? this._selectElement.value : null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += \";\";\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.type = \"number\";\r\n        this._numberInputElement.className = \"ac-input ac-numberInput\";\r\n        this._numberInputElement.min = this.min;\r\n        this._numberInputElement.max = this.max;\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    min: string;\r\n    max: string;\r\n    placeholder: string;\r\n\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.type = \"date\";\r\n        this._dateInputElement.className = \"ac-input ac-dateInput\";\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.type = \"time\";\r\n        this._timeInputElement.className = \"ac-input ac-timeInput\";\r\n        this._timeInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _action: Action;\r\n    private _element: HTMLButtonElement = null;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n    private _text: string;\r\n\r\n    private click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    private updateCssStyle() {\r\n        this._element.className = \"ac-pushButton\";\r\n\r\n        if (this._action instanceof ShowCardAction) {\r\n            this._element.classList.add(\"expandable\");\r\n        }\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this._element.classList.add(\"expanded\");\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this._element.classList.add(\"subdued\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    constructor(action: Action) {\r\n        this._action = action;\r\n\r\n        this._element = document.createElement(\"button\");\r\n        this._element.type = \"button\";\r\n\r\n        this._element.style.overflow = \"hidden\";\r\n        this._element.style.whiteSpace = \"nowrap\";\r\n        this._element.style.textOverflow = \"ellipsis\";\r\n        this._element.onclick = (e) => { this.click(); };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    get action() {\r\n        return this._action;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n        this._element.innerText = this._text;\r\n        this._element.setAttribute(\"aria-label\", this._text);\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action {\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n\r\n    protected setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    execute() {\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    setStatus(status: any) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n\r\n        if (status) {\r\n            let statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        // Do nothing in base implementation\r\n    };\r\n\r\n    parse(json: any) {\r\n        this.id = json[\"id\"];\r\n        this.title = json[\"title\"];\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    id: string;\r\n    title: string;\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Submit\";\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.OpenUrl\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Utils.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._value.substituteInputValues(inputs);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    private _url = new Utils.StringWithSubstitutions();\r\n    private _body = new Utils.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Http\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._url.substituteInputValues(inputs);\r\n        this._body.substituteInputValues(inputs);\r\n\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n        }\r\n    };\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n            this._headers = [];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    protected setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        invokeSetParent(this.card, value);\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    title: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.ShowCard\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this.card.validate();\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.card.parse(json[\"card\"]);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionButtons: Array<ActionButton> = [];\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _statusCard: HTMLElement = null;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    showStatusCard(status: AdaptiveCard) {\r\n        invokeSetParent(status, this._owner);\r\n        this._statusCard = status.render();\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    hideStatusCard() {\r\n        this._statusCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            if (this.onHideActionCardPane) {\r\n                this.onHideActionCardPane();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.onShowActionCardPane) {\r\n            this.onShowActionCardPane(null);\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        var padding = this._owner.hostConfig.paddingToSpacingDefinition(this._owner.getNonZeroPadding());\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    }\r\n\r\n    private hideActionCard() {\r\n        if (this._expandedAction) {\r\n            raiseInlineCardExpandedEvent(this._expandedAction, false);\r\n        }\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        raiseInlineCardExpandedEvent(action, true);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this._actionButtons.length; i++) {\r\n                this._actionButtons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    this._actionButtons[i].state = ActionButtonState.Normal;\r\n                }\r\n\r\n                this.hideActionCard();\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._actionButtons.length; i++) {\r\n                    if (this._actionButtons[i] !== actionButton) {\r\n                        this._actionButtons[i].state = ActionButtonState.Subdued;\r\n                    }\r\n                }\r\n\r\n                actionButton.state = ActionButtonState.Expanded;\r\n\r\n                this.showActionCard(actionButton.action);\r\n            }\r\n        }\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    onHideActionCardPane: () => void = null;\r\n    onShowActionCardPane: (action: ShowCardAction) => void = null;\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(orientation: Enums.Orientation): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n\r\n        this._renderedActionCount = 0;\r\n\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        if (AdaptiveCard.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = new ActionButton(this.items[i]);\r\n                    actionButton.element.style.overflow = \"hidden\";\r\n                    actionButton.element.style.overflow = \"table-cell\";\r\n                    actionButton.element.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                    actionButton.text = this.items[i].title;\r\n                    actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                    this._actionButtons.push(actionButton);\r\n\r\n                    buttonStrip.appendChild(actionButton.element);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action.parent) {\r\n            this.items.push(action);\r\n\r\n            invokeSetParent(action, this._owner);\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\")\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation);\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n        this._actionCollection.onHideActionCardPane = () => { this.showBottomSpacer(this); };\r\n        this._actionCollection.onShowActionCardPane = (action: ShowCardAction) => { this.hideBottomSpacer(this); };\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this._actionCollection.validate();\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                this.addAction(createActionInstance(jsonActions[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    url: string;\r\n    mode: Enums.BackgroundImageMode = Enums.BackgroundImageMode.Stretch;\r\n    horizontalAlignment: Enums.HorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    verticalAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    parse(json: any) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Container extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private _items: Array<CardElement> = [];\r\n    private _style?: Enums.ContainerStyle = null;\r\n\r\n    private get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n\r\n            super.showBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n\r\n            super.hideBottomSpacer(requestingElement);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.hasBackground) {\r\n            var physicalMargin: HostConfig.SpacingDefinition = new HostConfig.SpacingDefinition();\r\n            var physicalPadding: HostConfig.SpacingDefinition = new HostConfig.SpacingDefinition();\r\n\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && this.bleed;\r\n\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin: HostConfig.PaddingDefinition = new HostConfig.PaddingDefinition(\r\n                    {\r\n                        top: effectivePadding.top,\r\n                        right: effectivePadding.right,\r\n                        bottom: effectivePadding.bottom,\r\n                        left: effectivePadding.left,\r\n                    });\r\n\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Padding.None;\r\n                    effectiveMargin.top = Enums.Padding.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Padding.None;\r\n                    effectiveMargin.bottom = Enums.Padding.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Padding.None;\r\n                    effectiveMargin.left = Enums.Padding.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Padding.None;\r\n                    effectiveMargin.right = Enums.Padding.None;\r\n                }\r\n\r\n                if (effectivePadding.left != Enums.Padding.None || effectivePadding.right != Enums.Padding.None) {\r\n                    if (effectivePadding.left == Enums.Padding.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Padding.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Padding.None || effectivePadding.bottom != Enums.Padding.None) {\r\n                    if (effectivePadding.top == Enums.Padding.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Padding.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Padding.None\r\n                    || effectivePadding.right != Enums.Padding.None\r\n                    || effectivePadding.bottom != Enums.Padding.None\r\n                    || effectivePadding.left != Enums.Padding.None) {\r\n                    if (effectivePadding.top == Enums.Padding.None) {\r\n                        effectivePadding.top = Enums.Padding.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Padding.None) {\r\n                        effectivePadding.right = Enums.Padding.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Padding.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            bottom: Enums.Padding.Default\r\n                        })\r\n                    }\r\n\r\n                    if (effectivePadding.left == Enums.Padding.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, {\r\n                            left: Enums.Padding.Default\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top == Enums.Padding.None &&\r\n                    effectivePadding.right == Enums.Padding.None &&\r\n                    effectivePadding.bottom == Enums.Padding.None &&\r\n                    effectivePadding.left == Enums.Padding.None) {\r\n                    effectivePadding = new HostConfig.PaddingDefinition({\r\n                        top: Enums.Padding.Default,\r\n                        right: Enums.Padding.Default,\r\n                        bottom: Enums.Padding.Default,\r\n                        left: Enums.Padding.Default,\r\n                    })\r\n                }\r\n\r\n                physicalMargin = this.hostConfig.paddingToSpacingDefinition(effectiveMargin);\r\n                physicalPadding = this.hostConfig.paddingToSpacingDefinition(effectivePadding);\r\n            }\r\n            else {\r\n                physicalPadding = this.hostConfig.paddingToSpacingDefinition(new HostConfig.PaddingDefinition(\r\n                    {\r\n                        top: Enums.Padding.Default,\r\n                        right: Enums.Padding.Default,\r\n                        bottom: Enums.Padding.Default,\r\n                        left: Enums.Padding.Default\r\n                    }\r\n                ));\r\n            }\r\n\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = \"ac-container\";\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n\r\n            var styleDefinition = this.hostConfig.getContainerStyleDefinition(this.style);\r\n\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n\r\n        if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n            element.classList.add(\"ac-selectable\");\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction != null) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            var renderedElementCount: number = 0;\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (renderedElementCount > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    renderedElementCount++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n    }\r\n\r\n    protected get defaultStyle(): Enums.ContainerStyle {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    backgroundImage: BackgroundImage;\r\n    bleed: boolean = false;\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    get style(): Enums.ContainerStyle {\r\n        if (this.allowCustomStyle) {\r\n            return this._style ? this._style : this.defaultStyle;\r\n        }\r\n        else {\r\n            return this.defaultStyle;\r\n        }\r\n    }\r\n\r\n    set style(value: Enums.ContainerStyle) {\r\n        this._style = value;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json);\r\n\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"]);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        this._style = Utils.getEnumValueOrDefault(Enums.ContainerStyle, json[\"style\"], null);\r\n\r\n        if (json[itemsCollectionPropertyName] != null) {\r\n            var items = json[itemsCollectionPropertyName] as Array<any>;\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n\r\n                if (!element) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.UnknownElementType,\r\n                            message: \"Unknown element type: \" + elementType\r\n                        });\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n\r\n                    element.parse(items[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                this._items.push(item);\r\n\r\n                invokeSetParent(item, this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.hasBackground ? false : super.canContentBleed();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item: CardElement = this._items[i];\r\n\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = null;\r\n\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            invokeSetParent(this._selectAction, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        renderedElement.style.minWidth = \"0\";\r\n\r\n        if (this.pixelWidth > 0) {\r\n            renderedElement.style.flex = \"0 0 \" + this.pixelWidth + \"px\";\r\n        }\r\n        else {\r\n            if (typeof this.width === \"number\") {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width) + \"%\";\r\n            }\r\n            else if (this.width === \"auto\") {\r\n                renderedElement.style.flex = \"0 1 auto\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 50px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: number | \"auto\" | \"stretch\" = \"auto\";\r\n    pixelWidth: number = 0;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    });\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth <= 0) {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                var sizeAsNumber = parseInt(jsonWidth);\r\n\r\n                if (!isNaN(sizeAsNumber)) {\r\n                    jsonWidth = sizeAsNumber;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width: \" + jsonWidth\r\n                });\r\n        }\r\n        else {\r\n            this.width = jsonWidth;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends CardElement {\r\n    private _columns: Array<Column> = [];\r\n    private _selectAction: Action;\r\n\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._columns.length > 0) {\r\n            var element = document.createElement(\"div\");\r\n            element.className = \"ac-columnSet\";\r\n            element.style.display = \"flex\";\r\n\r\n            if (this.selectAction && this.hostConfig.supportsInteractivity) {\r\n                element.classList.add(\"ac-selectable\");\r\n\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var totalWeight: number = 0;\r\n\r\n            for (let i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\") {\r\n                    totalWeight += <number>this._columns[i].width;\r\n                }\r\n            }\r\n\r\n            var renderedColumnCount: number = 0;\r\n\r\n            for (let i = 0; i < this._columns.length; i++) {\r\n                if (typeof this._columns[i].width === \"number\" && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * <number>this._columns[i].width;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    this._columns[i][\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                var renderedColumn = this._columns[i].render();\r\n\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && this._columns[i].separatorElement) {\r\n                        this._columns[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._columns[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson);\r\n        }\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n            this._columns = [];\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n\r\n                column.parse(jsonColumns[i]);\r\n\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n        var weightedColumns: number = 0;\r\n        var stretchedColumns: number = 0;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            invokeSetParent(column, this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = '';\r\n\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            invokeSetParent(this._selectAction, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n    \r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement) {\r\n    element.getRootElement().updateLayout();\r\n\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: IValidationError) {\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\ninterface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        return element.children.length > 0 ? element : null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n        this._actionCollection.onHideActionCardPane = () => { this.showBottomSpacer(null) };\r\n        this._actionCollection.onShowActionCardPane = (action: ShowCardAction) => { this.hideBottomSpacer(null) };\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, itemsCollectionPropertyName: string = \"items\") {\r\n        super.parse(json, itemsCollectionPropertyName);\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i]);\r\n\r\n                if (action != null) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result = super.validate();\r\n\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Action.OpenUrl\", () => { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", () => { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", () => { return new ShowCardAction(); });\r\n    }\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n\r\n    private static currentVersion: Version = new Version(1, 0);\r\n\r\n    static preExpandSingleShowCardAction: boolean = false;\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onParseElement: (element: CardElement, json: any) => void = null;\r\n    static onParseError: (error: IValidationError) => void = null;\r\n\r\n    static processMarkdown = function (text: string): string {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion: boolean =\r\n                !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    private _cardTypeName: string;\r\n\r\n    protected showBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            this.applyPadding();\r\n\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    }\r\n\r\n    protected hideBottomSpacer(requestingElement: CardElement) {\r\n        if ((!requestingElement || this.isLastElement(requestingElement))) {\r\n            if (this.renderedElement) {\r\n                this.renderedElement.style.paddingBottom = \"0px\";\r\n            }\r\n\r\n            // Do not walk up the tree from an AdaptiveCard instance\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        var effectivePadding = this.hostConfig.paddingToSpacingDefinition(this.internalPadding);\r\n\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get defaultPadding(): HostConfig.PaddingDefinition {\r\n        return new HostConfig.PaddingDefinition(\r\n            {\r\n                top: Enums.Padding.Default,\r\n                right: Enums.Padding.Default,\r\n                bottom: Enums.Padding.Default,\r\n                left: Enums.Padding.Default\r\n            }\r\n        );\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onParseElement: (element: CardElement, json: any) => void = null;\r\n    \r\n    version?: Version = new Version(1, 0);\r\n    fallbackText: string;\r\n    type: string = \"AdaptiveCard\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n\r\n        return result.concat(super.validate());\r\n    }\r\n\r\n    parse(json: any) {\r\n        this._cardTypeName = json[\"type\"];\r\n\r\n        this.version = Version.parse(json[\"version\"]);\r\n\r\n        this.fallbackText = json[\"fallbackText\"];\r\n\r\n        super.parse(json, \"body\");\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        var renderedCard: HTMLElement;\r\n\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): HostConfig.PaddingDefinition {\r\n        return new HostConfig.PaddingDefinition(\r\n            {\r\n                top: this.suppressStyle ? Enums.Padding.None : Enums.Padding.Default,\r\n                right: Enums.Padding.Default,\r\n                bottom: this.suppressStyle ? Enums.Padding.None : Enums.Padding.Default,\r\n                left: Enums.Padding.Default\r\n            }\r\n        );\r\n    }\r\n\r\n    protected get defaultStyle(): Enums.ContainerStyle {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render() {\r\n        var renderedCard = super.render();\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n{\r\n    supportsInteractivity: true,\r\n    fontFamily: \"Segoe UI\",\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontSizes: {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    },\r\n    fontWeights: {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    normal: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                accent: {\r\n                    normal: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    normal: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    normal: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    normal: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    normal: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                accent: {\r\n                    normal: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    normal: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    normal: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    normal: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150,\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true,\r\n        },\r\n        spacing: 10\r\n    }\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/card-elements.ts","abstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(undefined, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(undefined, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(result);\r\n    }\r\n\r\n    return result;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/text-formatters.ts","import { Action, ShowCardAction, CardElement, AdaptiveCard, HostConfig } from \"./adaptivecards\";\r\nimport { IAdaptiveCard } from \"./schema\";\r\n\r\nexport interface IRenderOptions {\r\n    hostConfig?: HostConfig | string | object;\r\n    onAnchorClicked?: (anchor: HTMLAnchorElement) => boolean;\r\n    onExecuteAction?: (action: Action) => void;\r\n    onElementVisibilityChanged?: (element: CardElement) => void;\r\n    onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\r\n    onParseElement?: (element: CardElement, json: any) => void;\r\n    processMarkdown?: (text: string) => string;\r\n}\r\n\r\nexport function renderCard(card: IAdaptiveCard | string,\r\n                           options?: IRenderOptions,\r\n                           target?: HTMLElement): HTMLElement {\r\n\r\n    if (typeof card === \"string\") {\r\n        card = <IAdaptiveCard>JSON.parse(card);\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    // Setup a card\r\n    let adaptiveCard = new AdaptiveCard();\r\n\r\n    if (typeof options.hostConfig === \"string\") {\r\n        adaptiveCard.hostConfig = new HostConfig(JSON.parse(options.hostConfig));\r\n    }\r\n    else if (typeof options.hostConfig === \"object\" && !(options.hostConfig instanceof HostConfig)) {\r\n        adaptiveCard.hostConfig = new HostConfig(options.hostConfig);\r\n    }\r\n    else {\r\n        adaptiveCard.hostConfig = options.hostConfig;\r\n    }\r\n\r\n    adaptiveCard.onAnchorClicked = options.onAnchorClicked;\r\n    adaptiveCard.onExecuteAction = options.onExecuteAction;\r\n    adaptiveCard.onElementVisibilityChanged = options.onElementVisibilityChanged;\r\n    adaptiveCard.onInlineCardExpanded = options.onInlineCardExpanded;\r\n    adaptiveCard.onParseElement = options.onParseElement;\r\n\r\n    if (options.processMarkdown) {\r\n        AdaptiveCard.processMarkdown = options.processMarkdown;\r\n    }\r\n\r\n    // Parse the card\r\n    adaptiveCard.parse(card);\r\n    \r\n    // Render the card\r\n    return adaptiveCard.render(target);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/rendercard.ts"],"sourceRoot":""}